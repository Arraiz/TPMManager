#include <kdialog.h>
#include <klocale.h>
/****************************************************************************
** Form implementation generated from reading ui file './tpmmanagerwidgetbase.ui'
**
** Created: Do Okt 5 01:31:50 2006
**      by: The User Interface Compiler ($Id: qt/main.cpp   3.3.6   edited Aug 31 2005 $)
**
** WARNING! All changes made in this file will be lost!
****************************************************************************/

#include "tpmmanagerwidgetbase.h"

#include <qvariant.h>
#include <qpushbutton.h>
#include <qlistbox.h>
#include <qbuttongroup.h>
#include <qlabel.h>
#include <qwidgetstack.h>
#include <qwidget.h>
#include <qtabwidget.h>
#include <qlineedit.h>
#include <qtable.h>
#include <qlayout.h>
#include <qtooltip.h>
#include <qwhatsthis.h>
#include <qimage.h>
#include <qpixmap.h>

static const unsigned char img0_tpmmanagerwidgetbase[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x01,
    0xac, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xc5, 0xd3, 0x3f, 0x48, 0x55,
    0x01, 0x14, 0xc7, 0xf1, 0xcf, 0xbd, 0xef, 0xbe, 0xe7, 0x43, 0x09, 0x85,
    0x47, 0x86, 0xa9, 0x39, 0xbc, 0x41, 0x08, 0x6a, 0x10, 0xca, 0x6a, 0x08,
    0x6c, 0x6f, 0xb3, 0xda, 0x42, 0x4a, 0xa4, 0x29, 0x82, 0xa0, 0x90, 0x96,
    0xa0, 0xa5, 0xcd, 0x96, 0x96, 0x1a, 0x84, 0xa2, 0xa5, 0x16, 0x03, 0xe1,
    0x35, 0x84, 0x5b, 0x42, 0xba, 0x54, 0xd0, 0x1f, 0xb0, 0xa0, 0x4c, 0x30,
    0x5e, 0x68, 0x2f, 0xcb, 0x7c, 0xff, 0xae, 0xb7, 0xa1, 0x40, 0x93, 0xb4,
    0xc1, 0xa1, 0xb3, 0x9c, 0xdf, 0x19, 0xbe, 0x1c, 0xf8, 0x9d, 0xdf, 0x09,
    0x92, 0x24, 0xb1, 0x9d, 0x0a, 0xb7, 0x45, 0x23, 0x30, 0xa2, 0x53, 0xdd,
    0x47, 0xcb, 0xf8, 0x81, 0x15, 0xd4, 0x11, 0x21, 0x83, 0xf4, 0x3a, 0x1d,
    0xfd, 0x9e, 0x33, 0xf2, 0x99, 0x06, 0x67, 0x53, 0x29, 0xfb, 0x22, 0xb1,
    0x87, 0xea, 0xae, 0xa0, 0xb0, 0xe5, 0xaa, 0x04, 0xab, 0x76, 0xe3, 0x8c,
    0xba, 0xa1, 0x6a, 0x5d, 0x39, 0x88, 0x9c, 0x08, 0xc3, 0x38, 0xac, 0xa5,
    0xb3, 0xe9, 0xbb, 0x6a, 0xfa, 0x36, 0x05, 0xab, 0x72, 0xb8, 0xdc, 0xd2,
    0xd1, 0x32, 0xd1, 0xd6, 0xd1, 0x76, 0xcd, 0x8a, 0x59, 0x15, 0xc7, 0xf0,
    0x3c, 0x4c, 0x96, 0x92, 0xfb, 0xb9, 0xbd, 0xb9, 0x5c, 0x76, 0x4f, 0xf6,
    0x8e, 0xb2, 0xc3, 0x82, 0x75, 0x70, 0xcd, 0x2e, 0xb1, 0x73, 0x51, 0x7b,
    0xf4, 0xa4, 0xfd, 0x78, 0xfb, 0xf5, 0xe6, 0xce, 0xe6, 0xee, 0xe2, 0x4c,
    0xb1, 0xa0, 0xe2, 0xa4, 0xc0, 0x1c, 0x44, 0x49, 0x29, 0x99, 0x5e, 0x2c,
    0x2f, 0x56, 0xc3, 0xfe, 0xb0, 0xc3, 0xa2, 0x7b, 0xde, 0xeb, 0xc7, 0x2b,
    0x55, 0x03, 0xba, 0x0c, 0x04, 0x47, 0x82, 0xde, 0xcc, 0x81, 0x8c, 0xd2,
    0xd3, 0x92, 0xe5, 0xc2, 0xf2, 0x03, 0x29, 0x43, 0xb2, 0x4a, 0x6b, 0x26,
    0x0e, 0x6a, 0xd5, 0xa5, 0xe0, 0x82, 0x1e, 0x45, 0x8c, 0x7a, 0x67, 0xc5,
    0x82, 0xa3, 0x0e, 0x3a, 0x84, 0x9d, 0x18, 0xc3, 0xb8, 0x1b, 0x1a, 0x5d,
    0xb5, 0xc3, 0x57, 0x19, 0x64, 0x09, 0x1a, 0x89, 0xac, 0x2a, 0x7a, 0x6b,
    0xca, 0x6b, 0x3d, 0xba, 0x71, 0x4a, 0x5e, 0x28, 0xaf, 0x0d, 0x35, 0xdc,
    0x54, 0x37, 0x65, 0x44, 0x83, 0x61, 0x29, 0xf1, 0x46, 0x8b, 0x42, 0x15,
    0x7c, 0x37, 0xed, 0x85, 0x58, 0x11, 0x0d, 0x68, 0xc2, 0x07, 0xdc, 0xc2,
    0x84, 0x61, 0x89, 0x4b, 0x7f, 0x83, 0x21, 0xf2, 0x0d, 0xb1, 0x49, 0xcf,
    0x2c, 0xd8, 0xaf, 0x55, 0x1a, 0x73, 0x18, 0x53, 0x36, 0xe3, 0xbc, 0x26,
    0xb7, 0xb7, 0x8a, 0x5b, 0x24, 0x46, 0xec, 0x8d, 0x39, 0x2f, 0x7d, 0xd2,
    0xaa, 0x8a, 0x71, 0x5f, 0xcc, 0xba, 0xa8, 0xd1, 0xe8, 0xbf, 0xb2, 0x1a,
    0xa9, 0x61, 0x15, 0x15, 0x13, 0x26, 0xf5, 0x99, 0xf7, 0xd9, 0xac, 0xd3,
    0x22, 0x8f, 0xfe, 0x38, 0xe9, 0x26, 0x95, 0x92, 0x47, 0x80, 0x44, 0xd9,
    0xbc, 0x5e, 0x4b, 0x06, 0x45, 0x1e, 0x0b, 0xac, 0x45, 0x77, 0x63, 0x4f,
    0xfd, 0xd2, 0x41, 0x9a, 0xe0, 0xbf, 0x7f, 0xe3, 0x4f, 0xae, 0x03, 0x8b,
    0xee, 0x04, 0xa5, 0xca, 0xcf, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e,
    0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char img1_tpmmanagerwidgetbase[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x03,
    0x07, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0x6d, 0x93, 0x5b, 0x68, 0x1c,
    0x75, 0x18, 0xc5, 0x7f, 0xdf, 0x7f, 0x66, 0x67, 0x2f, 0xce, 0xee, 0x26,
    0xbb, 0xd9, 0x4b, 0x2e, 0xb2, 0x68, 0x52, 0x1a, 0x29, 0xc6, 0x6d, 0x6a,
    0x9a, 0xd2, 0xd4, 0x82, 0xa6, 0x2d, 0xa8, 0x08, 0xfa, 0x20, 0x48, 0x40,
    0x45, 0x30, 0x54, 0x10, 0xab, 0xe8, 0xab, 0x0f, 0x0a, 0x2a, 0x82, 0x14,
    0x15, 0x8b, 0x28, 0xa3, 0x15, 0x5f, 0x04, 0x8b, 0x3e, 0x68, 0x05, 0x6d,
    0x50, 0x5a, 0x4a, 0x4b, 0x2f, 0x69, 0x93, 0xd4, 0x16, 0x9b, 0x2c, 0x36,
    0xb2, 0x66, 0xa9, 0xb9, 0x6c, 0xd8, 0x4b, 0x36, 0x1b, 0x77, 0xb3, 0x33,
    0xe3, 0x43, 0x6c, 0x34, 0x6d, 0x3f, 0xf8, 0xde, 0xce, 0x39, 0x70, 0xbe,
    0x73, 0x3e, 0xe1, 0x36, 0x73, 0x69, 0x5b, 0xbf, 0xcf, 0x71, 0xdd, 0x3e,
    0x07, 0xba, 0x5c, 0x5c, 0x71, 0x91, 0x6b, 0x65, 0x5d, 0x1b, 0x1d, 0x3c,
    0x7f, 0xa6, 0x7a, 0x33, 0x56, 0x6e, 0x22, 0x9a, 0x02, 0xaf, 0x7b, 0x5c,
    0xf7, 0x85, 0xa0, 0x52, 0xe1, 0xc6, 0x9d, 0x1d, 0x34, 0x02, 0x01, 0x7c,
    0x99, 0x0c, 0x45, 0xdb, 0x29, 0x55, 0x85, 0xaf, 0x8b, 0xba, 0xe7, 0xed,
    0x7d, 0xe7, 0x4e, 0xff, 0x79, 0x8b, 0xc0, 0xa5, 0x6d, 0xfd, 0x49, 0x05,
    0x27, 0xa2, 0x89, 0xf8, 0xe6, 0xf0, 0x33, 0x4f, 0xa3, 0xed, 0x1a, 0x40,
    0x0b, 0x05, 0x01, 0x70, 0x6b, 0x75, 0xaa, 0x63, 0xe3, 0x54, 0xbe, 0xf8,
    0x92, 0xf9, 0xcc, 0x54, 0x7e, 0xd6, 0xef, 0x7f, 0xf2, 0x91, 0xd3, 0x27,
    0x4f, 0xac, 0x0b, 0x4c, 0xf4, 0x6e, 0x37, 0x95, 0xc8, 0x85, 0xb6, 0xde,
    0xad, 0x9b, 0x7d, 0xaf, 0x1c, 0x40, 0x0f, 0x9a, 0xb7, 0x73, 0x86, 0xb3,
    0xda, 0xa0, 0xf0, 0xf9, 0x61, 0xe6, 0x7e, 0x3a, 0xb6, 0x38, 0x69, 0x9a,
    0xf7, 0x0e, 0x9d, 0x3c, 0xfe, 0x97, 0x06, 0xb0, 0xbf, 0xb5, 0xfd, 0x9d,
    0x58, 0x32, 0xf9, 0x98, 0xff, 0xa5, 0x17, 0xd1, 0x43, 0x26, 0x9e, 0x96,
    0x16, 0xea, 0xb9, 0x1c, 0x4e, 0xb5, 0xba, 0xbe, 0x28, 0x85, 0x91, 0x88,
    0xa3, 0xc5, 0x63, 0x68, 0xbf, 0x4f, 0x07, 0x64, 0x76, 0x2e, 0xa8, 0x3d,
    0xfa, 0xf0, 0x88, 0xba, 0xd0, 0xdb, 0xe7, 0xf3, 0xc0, 0xf3, 0xde, 0x7d,
    0x7b, 0xb1, 0x2b, 0x15, 0xf4, 0x68, 0x14, 0x2d, 0x18, 0xc4, 0x48, 0xa5,
    0xa8, 0xcf, 0xe7, 0xa9, 0xcf, 0xe7, 0x71, 0x56, 0x6d, 0xfc, 0x9b, 0x36,
    0xa1, 0x05, 0x83, 0xb8, 0xb6, 0x83, 0x3c, 0xb0, 0x8b, 0x90, 0xe3, 0x0c,
    0x6d, 0x99, 0xc9, 0xb5, 0xe9, 0x40, 0x9f, 0x69, 0x18, 0x61, 0xbb, 0xb9,
    0x09, 0x27, 0x9f, 0xa7, 0xf8, 0xe3, 0x31, 0xc2, 0x7b, 0x1e, 0xc2, 0x48,
    0x24, 0xb8, 0x23, 0xdd, 0x43, 0xf5, 0xd7, 0x2b, 0x04, 0xb7, 0xdf, 0x0f,
    0xc0, 0xe2, 0x77, 0xdf, 0x63, 0x7e, 0xfa, 0x19, 0xed, 0xe5, 0x25, 0x5c,
    0xa5, 0xcc, 0xce, 0x72, 0x65, 0xa7, 0x0e, 0x74, 0xa9, 0x48, 0x84, 0x46,
    0x3e, 0x8f, 0x68, 0x1a, 0x28, 0xc5, 0xe2, 0x91, 0x6f, 0x88, 0x3c, 0xf1,
    0x38, 0xde, 0x8e, 0x76, 0x8c, 0xbd, 0x09, 0x00, 0x96, 0x0e, 0x7d, 0x4c,
    0xe0, 0x97, 0xe3, 0x78, 0x97, 0x96, 0x41, 0xc0, 0xa7, 0x69, 0x78, 0x44,
    0xba, 0x74, 0x40, 0xb4, 0x7a, 0x1d, 0x2d, 0x3b, 0x83, 0x18, 0x06, 0x62,
    0x18, 0xf8, 0xf2, 0x0b, 0x30, 0x37, 0x0f, 0x6f, 0xbd, 0xb9, 0x76, 0xbd,
    0xf1, 0x09, 0x82, 0x47, 0xbe, 0xfd, 0x2f, 0x37, 0x57, 0x01, 0x82, 0x23,
    0xa2, 0x94, 0x8b, 0x5c, 0x73, 0x4a, 0x25, 0xa2, 0x53, 0x19, 0x22, 0x97,
    0xaf, 0xd0, 0x7c, 0x71, 0x8c, 0x40, 0x28, 0x84, 0xf7, 0x7f, 0x64, 0xb6,
    0xa6, 0xe1, 0xc3, 0x83, 0xff, 0x0a, 0x08, 0xe8, 0x1a, 0x35, 0xa7, 0xc1,
    0x8a, 0x48, 0x4e, 0x95, 0x75, 0x6d, 0xb4, 0x64, 0xdb, 0x25, 0x11, 0x41,
    0x34, 0x85, 0xa4, 0x7b, 0xd0, 0xde, 0x7b, 0x77, 0x0d, 0x7c, 0xe0, 0x55,
    0x78, 0xf9, 0xb5, 0x75, 0x11, 0xf7, 0xa3, 0xf7, 0xb1, 0x03, 0x7e, 0x6c,
    0x9f, 0x8f, 0x82, 0xed, 0x2c, 0x5f, 0x8d, 0x34, 0x8d, 0xab, 0xc1, 0xf3,
    0x67, 0xaa, 0x55, 0xe1, 0xf0, 0xac, 0x12, 0xca, 0x1d, 0x1d, 0x38, 0xcf,
    0x3d, 0xbb, 0xe6, 0xf9, 0xe0, 0x07, 0x14, 0x6a, 0x35, 0x0a, 0xf7, 0x74,
    0x53, 0xf8, 0xc4, 0x62, 0x75, 0x2a, 0x83, 0xdc, 0xd7, 0x43, 0x75, 0xcf,
    0x20, 0xb3, 0x4a, 0x58, 0xf0, 0xe8, 0x47, 0xb3, 0xf1, 0xd8, 0x75, 0x01,
    0x18, 0xe9, 0x1f, 0x68, 0x8e, 0xd8, 0x8d, 0xd1, 0x96, 0x1d, 0x3b, 0x3a,
    0x8d, 0x96, 0xe8, 0x5a, 0x84, 0xd9, 0xec, 0x2d, 0x45, 0x32, 0x52, 0x29,
    0x2a, 0x17, 0xc7, 0x58, 0x38, 0x7b, 0x36, 0xf7, 0x73, 0x5b, 0xeb, 0x53,
    0xd3, 0x89, 0xd8, 0xe8, 0x7a, 0x95, 0x7f, 0x18, 0xd8, 0xdd, 0x99, 0xac,
    0xd7, 0x47, 0xc2, 0xe9, 0xf4, 0xdd, 0x66, 0x77, 0x37, 0x22, 0x1b, 0xc9,
    0xae, 0x0b, 0x95, 0xc9, 0x49, 0x8a, 0x13, 0x13, 0xb9, 0x53, 0xc9, 0xc4,
    0xfe, 0xdf, 0x92, 0xf1, 0x53, 0x96, 0x65, 0x95, 0x37, 0xc0, 0xbe, 0xda,
    0xfd, 0x60, 0x6b, 0xaa, 0xba, 0xf2, 0x46, 0x20, 0x10, 0x18, 0x32, 0xee,
    0x4a, 0x99, 0xde, 0xa6, 0x66, 0x00, 0x6a, 0xc5, 0x02, 0xf5, 0x3f, 0xb2,
    0xcb, 0x85, 0xda, 0xdf, 0x47, 0xcf, 0x25, 0xe2, 0x87, 0xa6, 0x13, 0xb1,
    0xcb, 0x96, 0x65, 0x95, 0x37, 0x3c, 0xd3, 0x8d, 0x19, 0x1e, 0x1e, 0x36,
    0xb6, 0xcc, 0xe4, 0xda, 0x3a, 0xcb, 0x95, 0x9d, 0x1e, 0x91, 0x2e, 0x47,
    0x44, 0xad, 0x88, 0xe4, 0xae, 0x46, 0x9a, 0xc6, 0xb3, 0xf1, 0xd8, 0x75,
    0x60, 0xd1, 0xb2, 0xac, 0xfa, 0x0d, 0xfc, 0x3f, 0xf6, 0x5f, 0x26, 0x12,
    0xa2, 0x88, 0xfa, 0x15, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44,
    0xae, 0x42, 0x60, 0x82
};

static const unsigned char img2_tpmmanagerwidgetbase[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0f,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xed, 0x73, 0x4f, 0x2f, 0x00, 0x00, 0x01,
    0xf8, 0x49, 0x44, 0x41, 0x54, 0x28, 0x91, 0x95, 0x92, 0xbf, 0x6b, 0x53,
    0x51, 0x14, 0xc7, 0x3f, 0xf7, 0xa5, 0xc9, 0x4b, 0x7c, 0xd8, 0x3e, 0x6c,
    0x1c, 0x4a, 0x41, 0x5f, 0x91, 0x50, 0x90, 0x5a, 0x9b, 0x41, 0xf0, 0x07,
    0xda, 0xd0, 0xc5, 0xc5, 0x45, 0x70, 0x70, 0x6b, 0xf2, 0x1f, 0xc4, 0xc5,
    0x5f, 0x8b, 0xad, 0x9b, 0x2e, 0xad, 0x08, 0x22, 0x2e, 0x29, 0x4e, 0x2e,
    0x82, 0xe8, 0xa2, 0x06, 0xa4, 0xab, 0x1d, 0xa4, 0x83, 0xa0, 0x34, 0xd0,
    0x14, 0xdb, 0x67, 0x9a, 0x9a, 0x34, 0x2f, 0x91, 0x58, 0x9a, 0x77, 0xef,
    0x7d, 0x0e, 0xda, 0x6a, 0x6a, 0x52, 0xf0, 0x4c, 0x87, 0x73, 0xbf, 0xe7,
    0xc3, 0x3d, 0xe7, 0x7c, 0x61, 0x9f, 0x68, 0xdc, 0x26, 0x57, 0xbb, 0x41,
    0x6e, 0x3f, 0x8d, 0xe8, 0xf6, 0xe0, 0xdd, 0xc2, 0x36, 0xfa, 0xcc, 0xa2,
    0xef, 0x43, 0xab, 0xb2, 0x3d, 0x34, 0xf0, 0x00, 0xaf, 0x93, 0xce, 0xe8,
    0x06, 0x08, 0x02, 0xb2, 0xe1, 0x13, 0x47, 0xed, 0xc8, 0xe8, 0x71, 0x5b,
    0x49, 0xb2, 0xdd, 0x74, 0x5d, 0x01, 0x44, 0x8c, 0xc9, 0x48, 0x6a, 0x94,
    0x03, 0x13, 0xc7, 0xd0, 0x61, 0x63, 0xf2, 0xbf, 0x00, 0xd5, 0xeb, 0xa4,
    0x43, 0x89, 0x41, 0x47, 0xc4, 0x56, 0x11, 0xd6, 0x2a, 0xd1, 0x61, 0xc7,
    0x59, 0xbb, 0x7b, 0x78, 0x4a, 0xeb, 0xbc, 0xbd, 0x57, 0x2b, 0xf4, 0x7d,
    0x72, 0x4a, 0xe3, 0x28, 0x1f, 0x54, 0x2c, 0x92, 0xd2, 0x56, 0x1f, 0xca,
    0x07, 0xeb, 0xea, 0x19, 0x42, 0xf1, 0x32, 0x00, 0xb2, 0x7c, 0x84, 0xd2,
    0xe3, 0x79, 0x94, 0x82, 0xad, 0xf5, 0x3a, 0x98, 0x51, 0xaf, 0x5e, 0x6c,
    0x2c, 0x2a, 0xc9, 0x8a, 0x50, 0xf7, 0xc8, 0xe9, 0xc4, 0x70, 0x3a, 0x34,
    0x71, 0x1a, 0xcc, 0xcd, 0xdf, 0x5c, 0xb7, 0xcb, 0x87, 0xe3, 0x80, 0x89,
    0x72, 0x25, 0xcb, 0x4f, 0xde, 0x53, 0xfe, 0xb0, 0x39, 0x27, 0x00, 0xb6,
    0xa6, 0xc8, 0xea, 0xde, 0xd0, 0x4c, 0xf4, 0xca, 0x49, 0x44, 0xe8, 0x47,
    0xd7, 0xb5, 0x20, 0x05, 0xca, 0x85, 0x8f, 0x8f, 0x96, 0xf8, 0x5e, 0x56,
    0xd7, 0x2e, 0xe4, 0x99, 0xdd, 0x3d, 0x63, 0xed, 0x26, 0x69, 0xec, 0x68,
    0xce, 0x3a, 0xdb, 0x4b, 0x4f, 0x3c, 0xfa, 0x6f, 0xf3, 0xb6, 0x41, 0x73,
    0x49, 0xb2, 0xfc, 0xea, 0x2b, 0x8d, 0x6f, 0x3a, 0x73, 0xfe, 0x0d, 0x73,
    0xb0, 0xc7, 0x07, 0xb5, 0x87, 0x03, 0x59, 0xbf, 0x52, 0x9e, 0x89, 0x5f,
    0xec, 0xef, 0x08, 0xf8, 0xf4, 0xb4, 0x82, 0x57, 0x52, 0x97, 0xcf, 0xbd,
    0xe6, 0xc5, 0x4e, 0xb9, 0xa7, 0x6d, 0xa3, 0x83, 0x09, 0x3b, 0xdc, 0xdc,
    0x80, 0xfa, 0xf6, 0xaf, 0x82, 0xe6, 0xcf, 0x9d, 0x14, 0x98, 0x31, 0x81,
    0xd6, 0xed, 0x86, 0x6a, 0x03, 0xb4, 0xdc, 0x2f, 0xe3, 0xb1, 0x30, 0xe0,
    0xb5, 0xc0, 0x13, 0xb4, 0xea, 0x01, 0x58, 0x01, 0x91, 0x7e, 0x01, 0x02,
    0x2c, 0x13, 0xa4, 0x24, 0x05, 0xcc, 0x77, 0x04, 0xa8, 0x46, 0x33, 0x65,
    0xc6, 0x02, 0x54, 0xc1, 0xa7, 0xb4, 0xa6, 0xa9, 0x56, 0x83, 0x45, 0xe9,
    0x83, 0x7d, 0x48, 0x8c, 0x39, 0x23, 0x06, 0xf6, 0x41, 0x50, 0x92, 0xf1,
    0xbf, 0x7b, 0x76, 0x8d, 0xa4, 0x75, 0xde, 0x6e, 0xb9, 0x55, 0xbc, 0x82,
    0xa6, 0xf0, 0x59, 0x79, 0x5e, 0x2d, 0xc8, 0x24, 0x9f, 0x93, 0x3c, 0xf5,
    0x92, 0xe4, 0xc6, 0x7a, 0x90, 0x59, 0x78, 0xab, 0x3c, 0xb7, 0xa0, 0x30,
    0x60, 0xac, 0x6d, 0xec, 0x9d, 0xa4, 0x90, 0xc1, 0xd1, 0x9a, 0xa2, 0xf2,
    0x99, 0xd6, 0x9a, 0xd9, 0x91, 0x67, 0xed, 0xb3, 0xbe, 0x4b, 0x61, 0x2b,
    0x49, 0x56, 0x4a, 0xee, 0x28, 0xcd, 0xd0, 0xa5, 0x05, 0x56, 0x00, 0x7e,
    0x02, 0x9b, 0xd1, 0xcd, 0x74, 0x9c, 0xe3, 0xc3, 0x84, 0x00, 0x00, 0x00,
    0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char img3_tpmmanagerwidgetbase[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x2f,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xa5, 0x82, 0x49, 0xc9, 0x00, 0x00, 0x0c,
    0x55, 0x49, 0x44, 0x41, 0x54, 0x68, 0x81, 0xed, 0x59, 0x6b, 0x8c, 0x5d,
    0xd5, 0x75, 0xfe, 0xd6, 0xde, 0xe7, 0x75, 0x5f, 0xf3, 0x1e, 0xcf, 0xd8,
    0xc6, 0xd8, 0x2e, 0x10, 0xa7, 0x36, 0x50, 0x88, 0x1d, 0x82, 0x5a, 0x13,
    0x68, 0x23, 0x94, 0xa0, 0x3c, 0x5a, 0x40, 0x44, 0x84, 0xa8, 0x29, 0x55,
    0xaa, 0x46, 0x02, 0xa9, 0x52, 0xd5, 0xa2, 0xf4, 0x07, 0x45, 0x95, 0x1b,
    0xd1, 0x54, 0x54, 0x55, 0xa5, 0x34, 0x6d, 0xd4, 0xa6, 0x6a, 0x43, 0x95,
    0x87, 0x88, 0x1c, 0x64, 0xa7, 0xaa, 0x52, 0xf2, 0xa3, 0xb5, 0x69, 0x8d,
    0x03, 0x28, 0x21, 0x80, 0x5f, 0xf8, 0x81, 0x2d, 0xdb, 0x33, 0x1e, 0xdf,
    0xb9, 0x33, 0xf7, 0x79, 0x5e, 0x7b, 0xef, 0xb5, 0xfa, 0xe3, 0xcc, 0xd8,
    0x33, 0xb6, 0x67, 0x6c, 0x0b, 0xc7, 0x52, 0x2b, 0x3e, 0xe9, 0x48, 0x73,
    0xe7, 0x9c, 0xb3, 0xce, 0xfa, 0xd6, 0xfa, 0xf6, 0xda, 0xeb, 0xac, 0x03,
    0xbc, 0x8f, 0xf7, 0xf1, 0x3e, 0xfe, 0x4f, 0x83, 0xae, 0x85, 0x91, 0x3f,
    0x7a, 0xf6, 0xa5, 0x91, 0x0d, 0x37, 0x8f, 0x7e, 0x2a, 0x08, 0xbd, 0x7b,
    0x3c, 0xdf, 0xbb, 0x03, 0x84, 0x75, 0x96, 0x79, 0xc0, 0x64, 0x06, 0xe2,
    0xa4, 0xa9, 0x94, 0x77, 0x9c, 0x20, 0x3f, 0xcf, 0x8c, 0xfb, 0xef, 0x23,
    0x47, 0xce, 0xfc, 0xf0, 0xaf, 0x9f, 0x7e, 0xa0, 0x7e, 0x2d, 0x9e, 0x0b,
    0xbc, 0x47, 0x02, 0x5f, 0x7b, 0xfe, 0xd5, 0xad, 0x6b, 0xd7, 0x0c, 0x3e,
    0xa9, 0xa2, 0xe8, 0xd1, 0x28, 0xf4, 0x60, 0x9c, 0x20, 0x37, 0x16, 0xa9,
    0x01, 0xa0, 0xd4, 0xb9, 0xeb, 0x94, 0x02, 0x22, 0x0d, 0xf8, 0x9e, 0x06,
    0xc0, 0x30, 0xa9, 0x79, 0xe1, 0xec, 0x99, 0xe6, 0xd7, 0x77, 0xe8, 0x63,
    0x2f, 0xef, 0x7c, 0xf0, 0x21, 0xb9, 0xee, 0x04, 0xfe, 0xe6, 0x9f, 0x5f,
    0x19, 0xbf, 0xf9, 0x96, 0xf1, 0xbf, 0xa4, 0xc0, 0xff, 0x42, 0x66, 0x1c,
    0xac, 0x53, 0xa8, 0x46, 0x0a, 0x9a, 0x08, 0x02, 0x81, 0x88, 0x00, 0x0b,
    0xdc, 0xb2, 0x02, 0xf0, 0xdc, 0xef, 0x5e, 0xe6, 0x00, 0x67, 0x11, 0x45,
    0x1e, 0x22, 0xa5, 0xbe, 0x3d, 0x5d, 0xef, 0xfe, 0xc9, 0xc1, 0xc1, 0xfa,
    0xc4, 0xb3, 0xf7, 0x7c, 0x94, 0xaf, 0x0b, 0x81, 0x1f, 0xfc, 0xf8, 0xd0,
    0x6f, 0x55, 0xfb, 0xab, 0xff, 0xd0, 0x88, 0xf3, 0x51, 0xe7, 0x80, 0x20,
    0xf4, 0xa0, 0x94, 0x82, 0x9a, 0xb7, 0x24, 0x0c, 0x16, 0x14, 0x24, 0xe6,
    0xc0, 0x0e, 0x00, 0x31, 0x84, 0x09, 0x4e, 0x04, 0x2c, 0x40, 0x62, 0x04,
    0x49, 0x26, 0x58, 0xb7, 0x22, 0x98, 0xf6, 0x6d, 0xf6, 0xe4, 0xbb, 0x8d,
    0xd6, 0x0f, 0x86, 0x93, 0x3b, 0xdd, 0xa3, 0x8f, 0xd2, 0x55, 0x65, 0xe4,
    0xaa, 0x08, 0xbc, 0xf4, 0xca, 0xbb, 0x4f, 0x4c, 0xa7, 0xea, 0xeb, 0x53,
    0xcd, 0x0c, 0xfd, 0x65, 0x82, 0xf6, 0xfc, 0xc2, 0x61, 0x66, 0x18, 0xe3,
    0x90, 0x3b, 0x05, 0xeb, 0x18, 0x46, 0xa8, 0x70, 0x7a, 0x01, 0x1c, 0x15,
    0x8f, 0x0a, 0x95, 0xc0, 0x53, 0x80, 0xaf, 0x04, 0x96, 0x81, 0x99, 0x76,
    0x8a, 0xe1, 0xbe, 0x10, 0xa3, 0x25, 0xfd, 0xc7, 0x69, 0x56, 0xfe, 0xdb,
    0xb0, 0xd7, 0xb2, 0x9f, 0xfb, 0xdc, 0x46, 0x77, 0x89, 0xc7, 0xbf, 0x37,
    0x02, 0x2f, 0xfe, 0xe7, 0x91, 0x2f, 0x4d, 0xf5, 0xe4, 0x1b, 0xc7, 0xcf,
    0xb4, 0x51, 0xad, 0x94, 0x41, 0x9a, 0x90, 0xe5, 0x02, 0xeb, 0x18, 0xce,
    0x1a, 0xe4, 0x86, 0x61, 0xad, 0x85, 0x63, 0x41, 0xbe, 0x40, 0x32, 0x00,
    0x00, 0x06, 0x14, 0x01, 0xa2, 0x08, 0x3e, 0x11, 0x7c, 0x25, 0xd0, 0x5a,
    0xc3, 0xf7, 0x35, 0xb4, 0x22, 0x9c, 0x9a, 0x8a, 0x31, 0x58, 0xd3, 0xe8,
    0x0f, 0xe8, 0xa9, 0xe1, 0xd5, 0xb5, 0xbf, 0xab, 0xd7, 0xeb, 0xd9, 0xb3,
    0x8f, 0xdf, 0x73, 0x45, 0x24, 0xae, 0x88, 0xc0, 0x57, 0xff, 0xe9, 0x95,
    0x8f, 0xdb, 0xb0, 0xfa, 0xa3, 0xc3, 0x13, 0x09, 0xfa, 0xcb, 0x1a, 0xa4,
    0x04, 0x49, 0xee, 0x10, 0xe7, 0x40, 0x96, 0x09, 0xac, 0xc9, 0x61, 0x8c,
    0xc1, 0x8e, 0xaf, 0xdc, 0xb7, 0xa4, 0x8d, 0xfb, 0x9e, 0xfc, 0x21, 0x74,
    0xe8, 0xc3, 0xf3, 0x3c, 0x78, 0x5a, 0xc1, 0x57, 0x1a, 0x3a, 0xf0, 0xa1,
    0x3d, 0x1f, 0xbe, 0x26, 0x9c, 0x69, 0x74, 0xe1, 0x92, 0x1e, 0x54, 0xd6,
    0xfc, 0xfc, 0xbd, 0x5b, 0xef, 0xdc, 0x39, 0xdb, 0x3c, 0x94, 0x7e, 0xad,
    0xf9, 0x86, 0xc3, 0xb6, 0xaf, 0x2c, 0x2b, 0x29, 0xef, 0x72, 0xce, 0xff,
    0xc6, 0xef, 0x7e, 0xb7, 0x7c, 0x72, 0x26, 0xfb, 0xfb, 0xc3, 0xf5, 0x18,
    0xb5, 0x72, 0x88, 0x76, 0xac, 0x90, 0x1b, 0x0b, 0x9b, 0xa7, 0xc8, 0x72,
    0x03, 0x6b, 0x2d, 0x38, 0xb7, 0x90, 0x0b, 0x35, 0x73, 0x01, 0x3a, 0xb3,
    0x93, 0xd0, 0x5e, 0x08, 0x52, 0x1a, 0xa4, 0x7d, 0x10, 0x69, 0x90, 0x17,
    0x16, 0x95, 0x89, 0x3c, 0x04, 0x91, 0x42, 0xa7, 0x39, 0x8d, 0xac, 0x5b,
    0x7f, 0xee, 0xed, 0xfd, 0xfd, 0xaf, 0xf9, 0x03, 0x2b, 0x26, 0xef, 0x3e,
    0xfe, 0xcb, 0xc9, 0x5e, 0x60, 0x59, 0xc3, 0x97, 0x25, 0xd0, 0x75, 0xf8,
    0x8b, 0xc9, 0xb3, 0xb3, 0xeb, 0x3b, 0x3d, 0xbf, 0xd0, 0x79, 0x1c, 0xc3,
    0x58, 0x07, 0x67, 0x12, 0x38, 0xce, 0x20, 0xc6, 0x40, 0xd8, 0x81, 0x79,
    0xf9, 0x22, 0x92, 0x75, 0xeb, 0x50, 0x3a, 0x80, 0x90, 0x06, 0xc1, 0x07,
    0x79, 0x1a, 0x4a, 0x14, 0xf2, 0x40, 0x43, 0xc8, 0x87, 0xa7, 0xa3, 0x22,
    0x28, 0xdd, 0xc6, 0xaa, 0xd7, 0xf7, 0xec, 0xfd, 0xb3, 0x8d, 0x5b, 0xb6,
    0x3c, 0xa5, 0x13, 0xc3, 0x9b, 0x36, 0xfd, 0x4b, 0xba, 0x6f, 0xdf, 0xe3,
    0x4b, 0x1a, 0x57, 0x4b, 0x9d, 0x00, 0x80, 0x91, 0xbb, 0x9e, 0xfb, 0x20,
    0x33, 0xff, 0xc1, 0xe5, 0x48, 0x5e, 0x6b, 0xe4, 0x59, 0xfa, 0xd8, 0xa1,
    0xb7, 0x0f, 0x6d, 0x6e, 0xdb, 0x76, 0xa5, 0x39, 0x76, 0xc4, 0x03, 0x1e,
    0x5e, 0x52, 0xea, 0xcb, 0x12, 0x20, 0xa2, 0x27, 0xae, 0xbd, 0x7b, 0x97,
    0x07, 0x41, 0x30, 0x7b, 0x66, 0xf6, 0xf1, 0x5e, 0xb7, 0x33, 0x60, 0x33,
    0x55, 0x1a, 0x1d, 0xbd, 0x49, 0x2f, 0x7d, 0xed, 0x32, 0x18, 0xbd, 0xeb,
    0xab, 0xcd, 0x81, 0x61, 0xd5, 0xbf, 0x7a, 0xf5, 0x28, 0xba, 0xb9, 0x07,
    0x01, 0x81, 0xf3, 0x18, 0xce, 0x19, 0x38, 0x93, 0x81, 0x5d, 0x0e, 0x31,
    0xa6, 0x90, 0x8f, 0x14, 0x59, 0x66, 0xb6, 0x70, 0x2e, 0x03, 0x2e, 0x90,
    0x94, 0x52, 0x1e, 0x48, 0x69, 0x40, 0x01, 0xa4, 0x34, 0x04, 0x1a, 0x0a,
    0x0a, 0x4a, 0x29, 0x90, 0xa7, 0xe1, 0x79, 0x85, 0xfd, 0xb4, 0x79, 0x06,
    0x79, 0x1a, 0xa3, 0xd5, 0x0c, 0x7b, 0xfd, 0xa3, 0xb5, 0x8f, 0x25, 0xbd,
    0xe4, 0x14, 0xb7, 0xe2, 0x99, 0xc6, 0xd1, 0xb7, 0x32, 0xe0, 0xe5, 0x8b,
    0xa4, 0xb4, 0x64, 0x06, 0xca, 0x1f, 0xf8, 0xf2, 0xa7, 0x00, 0xf4, 0x5f,
    0x26, 0x58, 0xbf, 0x48, 0x54, 0xd2, 0x76, 0xfb, 0x13, 0x04, 0xd7, 0x97,
    0x57, 0x55, 0x88, 0x35, 0x2b, 0x2e, 0xe9, 0xeb, 0x92, 0x8b, 0x58, 0xa0,
    0xef, 0xf5, 0x75, 0x06, 0x9b, 0x0b, 0xba, 0xed, 0x26, 0x72, 0x57, 0xec,
    0xae, 0x6c, 0x73, 0xb0, 0xb1, 0x60, 0x67, 0xc1, 0xd6, 0xc2, 0xb1, 0x81,
    0x38, 0x01, 0x84, 0x21, 0x54, 0x14, 0x0c, 0x12, 0xb7, 0x68, 0x27, 0x06,
    0x00, 0xcb, 0xf9, 0xdc, 0x39, 0x02, 0x11, 0x41, 0x40, 0x00, 0xcd, 0x65,
    0x80, 0x34, 0xac, 0x2e, 0x76, 0x74, 0x00, 0x00, 0xa7, 0x88, 0x4a, 0x1a,
    0x69, 0x1a, 0x6c, 0xf6, 0x43, 0xf7, 0x1f, 0x2a, 0x47, 0x33, 0xe2, 0x1b,
    0x92, 0x14, 0x0f, 0x3b, 0x60, 0xfb, 0x22, 0xc3, 0xcb, 0x55, 0xa1, 0xcd,
    0x61, 0x64, 0xe0, 0x47, 0x35, 0xf4, 0xe2, 0x04, 0x5a, 0x3b, 0x38, 0x4b,
    0x00, 0xe7, 0x70, 0x2c, 0x60, 0xc7, 0x60, 0xb6, 0x10, 0xeb, 0x20, 0xe2,
    0x70, 0x74, 0xf7, 0x5f, 0x2d, 0x1b, 0xce, 0xf5, 0x5b, 0x9f, 0x28, 0xfa,
    0x23, 0x22, 0xc8, 0x9c, 0xdc, 0x40, 0x0a, 0xae, 0xd0, 0x54, 0x51, 0x5e,
    0xe1, 0x03, 0x4a, 0x40, 0x9e, 0x0f, 0xcf, 0xa5, 0x30, 0xd6, 0xbf, 0x29,
    0x8a, 0x5c, 0xd5, 0x29, 0x55, 0xd6, 0xa1, 0xe9, 0x00, 0xc3, 0x06, 0x8b,
    0xba, 0xac, 0xe5, 0x08, 0x30, 0x6e, 0xf2, 0xc2, 0x00, 0xda, 0xf3, 0xa1,
    0x55, 0x00, 0x88, 0x85, 0xd2, 0x0e, 0x42, 0x04, 0x25, 0x0c, 0x68, 0x06,
    0xb4, 0x07, 0x68, 0x7b, 0x4e, 0xff, 0xcb, 0x81, 0x54, 0x78, 0xbe, 0x5f,
    0x5a, 0x00, 0x41, 0x91, 0x11, 0x90, 0x02, 0xc0, 0xd0, 0xe4, 0x43, 0x29,
    0x0f, 0x8e, 0x7a, 0x60, 0xe6, 0x71, 0x11, 0xa9, 0x10, 0x5c, 0x85, 0x22,
    0x17, 0x60, 0x15, 0x52, 0x4c, 0x60, 0xd1, 0xc3, 0x96, 0x20, 0xf0, 0x0c,
    0x09, 0x65, 0x2b, 0xb4, 0x2e, 0x15, 0x04, 0x3c, 0x1f, 0xc5, 0x72, 0x61,
    0x08, 0x17, 0xf2, 0x28, 0x3a, 0xce, 0xe2, 0x37, 0x1c, 0xe3, 0xf6, 0xdf,
    0x7c, 0x0e, 0x6f, 0xee, 0x78, 0x6a, 0x49, 0x02, 0x61, 0x79, 0x10, 0xca,
    0x3b, 0x2f, 0xe3, 0xf9, 0x56, 0x83, 0x58, 0x20, 0x24, 0x00, 0x17, 0x8f,
    0xf0, 0x94, 0x82, 0xc9, 0x33, 0x20, 0x6d, 0x01, 0x40, 0x8d, 0x20, 0x21,
    0x40, 0x25, 0x71, 0x7e, 0x50, 0x09, 0x03, 0xd5, 0x2b, 0x0a, 0xcf, 0xb9,
    0x2c, 0x2c, 0x27, 0xa1, 0x48, 0x29, 0x55, 0x10, 0xf0, 0x4b, 0x50, 0x5e,
    0x54, 0x44, 0x4a, 0xf8, 0x1c, 0x81, 0x79, 0x9d, 0x17, 0x7f, 0x9f, 0xdf,
    0x30, 0x45, 0xa4, 0xb8, 0x76, 0xa1, 0xb1, 0xfe, 0x91, 0xa2, 0xfa, 0x08,
    0x15, 0x81, 0x90, 0xa2, 0xf5, 0x9e, 0xcf, 0xde, 0x7c, 0x40, 0x08, 0x02,
    0xb2, 0x6d, 0x10, 0x04, 0x60, 0xcf, 0x27, 0xca, 0x7d, 0x28, 0x09, 0x09,
    0xca, 0x37, 0x71, 0xac, 0x80, 0x67, 0x00, 0x6c, 0xbb, 0x5c, 0x06, 0xf6,
    0x81, 0xe8, 0x96, 0x14, 0x40, 0xa4, 0xb5, 0x0f, 0xcf, 0x8f, 0xe0, 0x85,
    0x65, 0x90, 0xf2, 0x01, 0x0d, 0xc0, 0x61, 0x31, 0x89, 0xf9, 0x4c, 0xcc,
    0x81, 0x88, 0x2e, 0x5a, 0xc4, 0x61, 0x65, 0x10, 0x50, 0x41, 0x11, 0x7d,
    0xe6, 0x05, 0x0e, 0x3b, 0x88, 0x2d, 0xec, 0x90, 0x16, 0xd8, 0xa4, 0x0b,
    0xb6, 0x0c, 0x81, 0x0f, 0x28, 0x6b, 0xa0, 0xe0, 0xc1, 0xb1, 0x4f, 0x4c,
    0x9a, 0x4b, 0x4c, 0xc0, 0xbe, 0x45, 0x76, 0x97, 0xcc, 0x00, 0x33, 0xea,
    0xcc, 0xbc, 0x86, 0x9d, 0x85, 0x82, 0x45, 0xa9, 0x12, 0xc2, 0xf7, 0x8b,
    0x1e, 0x46, 0xe6, 0x7a, 0x7a, 0x66, 0x06, 0x5b, 0x00, 0x8a, 0x21, 0x66,
    0x71, 0x06, 0x2e, 0x84, 0x5f, 0xa9, 0x81, 0x74, 0x78, 0x8e, 0xfc, 0x7c,
    0x1b, 0x4e, 0xce, 0x01, 0x3e, 0x43, 0x34, 0x81, 0x6d, 0x8e, 0xb4, 0x3d,
    0x03, 0x6b, 0x18, 0xa4, 0x7c, 0x28, 0xa5, 0xba, 0x50, 0x50, 0xa2, 0x48,
    0x8b, 0x22, 0x2d, 0xac, 0x2f, 0x5a, 0x45, 0x4b, 0xee, 0x03, 0x44, 0x74,
    0x6c, 0xa9, 0x73, 0xd7, 0x0b, 0x44, 0x54, 0x27, 0xd2, 0x44, 0x10, 0x25,
    0x20, 0x08, 0x9b, 0x8b, 0xae, 0x59, 0x32, 0x03, 0xc6, 0x98, 0x37, 0x9c,
    0x35, 0xf7, 0x6a, 0x64, 0x08, 0x82, 0x21, 0x04, 0xbe, 0x87, 0xc1, 0xbe,
    0x32, 0x7c, 0x5d, 0x44, 0xdf, 0x3a, 0x86, 0x83, 0x80, 0x2d, 0xe0, 0x58,
    0x2e, 0x19, 0xf5, 0x85, 0xa8, 0xf5, 0x95, 0xa0, 0x68, 0x5e, 0x42, 0x73,
    0xf7, 0xcc, 0x4b, 0x07, 0x02, 0x01, 0x21, 0xcf, 0x62, 0x58, 0xd3, 0x85,
    0x70, 0x06, 0xe3, 0x6a, 0xf0, 0x7d, 0x39, 0x09, 0x86, 0x10, 0x34, 0x13,
    0xa4, 0x90, 0xf0, 0x05, 0x58, 0x26, 0x03, 0xb2, 0x7b, 0x59, 0x8f, 0xae,
    0x03, 0xc2, 0x88, 0x0e, 0x83, 0x14, 0x0b, 0x91, 0x23, 0x16, 0x07, 0x5d,
    0xbe, 0x28, 0x4a, 0x4b, 0x64, 0x60, 0x13, 0x54, 0x94, 0xfd, 0x7b, 0xd2,
    0x35, 0x9d, 0x4a, 0xa9, 0x53, 0x5b, 0x39, 0x72, 0x33, 0xfc, 0x6a, 0x09,
    0x37, 0xae, 0xaa, 0x22, 0xd4, 0x02, 0xe7, 0x1c, 0x8c, 0x13, 0x18, 0x27,
    0xb0, 0x0e, 0x30, 0x4e, 0xe0, 0xcc, 0xf9, 0x8a, 0x74, 0x29, 0xf4, 0x97,
    0x42, 0xf8, 0x41, 0x08, 0x26, 0x80, 0xed, 0x82, 0x85, 0x8c, 0xa2, 0xa4,
    0x12, 0x04, 0xa7, 0x26, 0x5b, 0x70, 0x49, 0x0b, 0x9e, 0x17, 0xa1, 0x1b,
    0x97, 0x92, 0x5a, 0xbf, 0xbc, 0x99, 0xc5, 0xd6, 0x82, 0x94, 0x11, 0xc5,
    0x4e, 0x07, 0x3d, 0xb1, 0xd8, 0x04, 0x60, 0xfb, 0xe5, 0x08, 0x00, 0x7e,
    0x6a, 0xb8, 0xdd, 0xc2, 0x0b, 0x03, 0x23, 0xde, 0x17, 0x47, 0xa2, 0x18,
    0x9b, 0x37, 0x6f, 0x40, 0x2b, 0x71, 0x58, 0x51, 0x0b, 0x00, 0x61, 0xe4,
    0x96, 0x91, 0x1b, 0xe0, 0xf7, 0x1e, 0x58, 0xbf, 0xe8, 0xbe, 0x0b, 0xcb,
    0xe7, 0x3c, 0xbe, 0xfb, 0xf4, 0x56, 0x00, 0xc0, 0xd3, 0xdf, 0xd8, 0x85,
    0x36, 0x06, 0xc0, 0xcc, 0x70, 0x42, 0xd0, 0x22, 0x30, 0x42, 0xe8, 0x74,
    0x32, 0xd8, 0xee, 0x0c, 0x20, 0x39, 0x28, 0x1a, 0x03, 0xf5, 0xf8, 0x35,
    0xa2, 0x84, 0x89, 0xc8, 0x28, 0x91, 0x4c, 0x40, 0xc6, 0xcb, 0xcb, 0x9c,
    0x2d, 0x28, 0xa1, 0xcb, 0x10, 0xd8, 0x26, 0xbd, 0xec, 0xf7, 0xb9, 0x5c,
    0x0a, 0xff, 0xd1, 0x97, 0xfe, 0x2f, 0xd6, 0x67, 0x12, 0x4c, 0x9d, 0x9e,
    0xc4, 0x9d, 0x9b, 0xd6, 0xc2, 0xf7, 0x7c, 0x54, 0x4b, 0xc5, 0xcb, 0x7b,
    0x66, 0xaf, 0x7e, 0x2a, 0xd3, 0x5f, 0x25, 0x0c, 0x94, 0x22, 0x58, 0xcb,
    0xe7, 0x47, 0x2d, 0xa9, 0x41, 0xbd, 0x9e, 0x82, 0x6d, 0x8e, 0x68, 0xe0,
    0x06, 0xa4, 0xa6, 0x0f, 0xd5, 0xbe, 0xc6, 0x6e, 0x61, 0x72, 0x20, 0x95,
    0x89, 0xd6, 0x09, 0x94, 0xcd, 0x7b, 0x59, 0x97, 0x71, 0xc5, 0xad, 0xc4,
    0x2a, 0x70, 0x59, 0xd4, 0xbe, 0xc6, 0x74, 0xf6, 0xad, 0x91, 0x51, 0xf7,
    0x3b, 0x87, 0x4e, 0x24, 0xb8, 0x65, 0x6d, 0x8a, 0x1b, 0x57, 0x06, 0xa8,
    0x55, 0x3c, 0x94, 0x02, 0x1f, 0x2c, 0xc0, 0x7f, 0xbd, 0x76, 0x18, 0x49,
    0x9a, 0x9d, 0xbb, 0x4d, 0x44, 0x60, 0x99, 0x61, 0xdc, 0x79, 0x72, 0xc6,
    0x0a, 0xdc, 0x9c, 0xb7, 0x2b, 0x47, 0xfa, 0xd1, 0xdf, 0x5f, 0x81, 0xb5,
    0x8c, 0xcc, 0x11, 0x62, 0x63, 0xd1, 0xee, 0x2a, 0x9c, 0x1d, 0xae, 0xa0,
    0x39, 0x3d, 0x82, 0xda, 0xea, 0xd5, 0x78, 0xe7, 0xc0, 0x99, 0x5d, 0x51,
    0x25, 0x9c, 0x8c, 0xbb, 0x49, 0x4e, 0xf0, 0x63, 0x22, 0x17, 0x83, 0xbc,
    0x1c, 0xab, 0xc0, 0x98, 0x58, 0xec, 0xe6, 0xd2, 0x04, 0x5e, 0x6f, 0x88,
    0xfe, 0xb5, 0x71, 0x93, 0x65, 0xbd, 0x6d, 0x53, 0x0d, 0x77, 0xff, 0xea,
    0xb5, 0xde, 0xaa, 0x57, 0x0e, 0xb5, 0x70, 0xd7, 0xc6, 0xf1, 0xa2, 0x6a,
    0x10, 0x50, 0x8d, 0x3c, 0x6c, 0xbe, 0x6d, 0x3d, 0xc4, 0x31, 0x9c, 0x63,
    0x38, 0x27, 0x70, 0x22, 0x70, 0x20, 0x58, 0x7b, 0xde, 0x94, 0xe3, 0xe2,
    0xff, 0x72, 0xc1, 0xd1, 0x8d, 0x2d, 0x62, 0x03, 0x38, 0x6b, 0xf0, 0xee,
    0x99, 0x0c, 0x1f, 0xbd, 0xeb, 0x66, 0x9c, 0x38, 0x36, 0xd9, 0x18, 0x1a,
    0xf5, 0x76, 0xf6, 0x5a, 0x9e, 0x55, 0xba, 0x9c, 0x90, 0xce, 0x3a, 0xda,
    0x73, 0x3d, 0x67, 0x7a, 0x06, 0xaf, 0x37, 0x2e, 0x5a, 0x60, 0x4b, 0xbe,
    0xe9, 0x00, 0x07, 0x50, 0x1e, 0xff, 0x08, 0x55, 0x6b, 0x35, 0xd7, 0x6e,
    0x76, 0xea, 0x5b, 0x36, 0xff, 0xd2, 0xa7, 0x55, 0xa0, 0x71, 0xf8, 0x74,
    0x17, 0x1b, 0x6e, 0xec, 0xc3, 0x50, 0x2d, 0x82, 0x61, 0xc0, 0x53, 0x40,
    0xe4, 0x6b, 0x84, 0xa1, 0x87, 0x20, 0xf0, 0x10, 0x06, 0x1a, 0x91, 0xaf,
    0x50, 0x8e, 0x3c, 0x94, 0x23, 0x8d, 0x72, 0xa4, 0x51, 0x29, 0x69, 0xd4,
    0xc2, 0x62, 0x7a, 0x57, 0x0e, 0x3d, 0x68, 0xad, 0xa1, 0x95, 0xa0, 0x5a,
    0x0e, 0x20, 0x42, 0x78, 0xe3, 0xe8, 0x0c, 0xc6, 0x86, 0x7c, 0x54, 0x61,
    0xb1, 0xe7, 0x8d, 0x13, 0xdf, 0x8a, 0x2a, 0xa5, 0x09, 0xcb, 0x9c, 0xb0,
    0x60, 0x86, 0x49, 0x4d, 0x81, 0xd4, 0xac, 0x47, 0x9c, 0xc5, 0x13, 0xdf,
    0xbc, 0xa8, 0x6b, 0x5c, 0x86, 0x00, 0x10, 0x6f, 0xf8, 0x18, 0xfa, 0x8c,
    0xc2, 0xd8, 0x68, 0xf5, 0xd4, 0x3b, 0x07, 0xa7, 0xcc, 0x67, 0x1f, 0xd8,
    0xb8, 0x15, 0x4a, 0xe3, 0xd0, 0xa9, 0x36, 0x3c, 0xad, 0xd0, 0x57, 0xd2,
    0xf0, 0x35, 0x01, 0x02, 0x28, 0x22, 0x68, 0xad, 0xa0, 0x14, 0x41, 0x29,
    0x82, 0x5e, 0x78, 0x2c, 0x38, 0x67, 0x6d, 0x31, 0xd0, 0x12, 0x11, 0x4c,
    0x4e, 0xc7, 0x78, 0xf3, 0x78, 0x1b, 0x7d, 0x95, 0x10, 0x55, 0x9b, 0xe1,
    0x7b, 0xff, 0xf6, 0xd6, 0x0b, 0x1b, 0x6e, 0x5f, 0xf7, 0xba, 0xb0, 0x18,
    0x38, 0x69, 0x89, 0xa3, 0xba, 0x08, 0xea, 0x2e, 0x35, 0xdd, 0x89, 0xbd,
    0x64, 0x81, 0x5d, 0x57, 0x93, 0x01, 0x00, 0xc7, 0x77, 0x49, 0x30, 0xb6,
    0x05, 0xa5, 0x60, 0x10, 0x23, 0xe3, 0xd5, 0x77, 0x5e, 0xfa, 0xf1, 0x7e,
    0x79, 0xe4, 0xfe, 0x0f, 0x7c, 0x64, 0x70, 0xb8, 0x86, 0x03, 0x93, 0x09,
    0xa6, 0xdb, 0x39, 0x8c, 0x73, 0x70, 0x73, 0x1b, 0x93, 0x31, 0x0e, 0x49,
    0xee, 0x90, 0x18, 0x46, 0x92, 0x0b, 0x92, 0x9c, 0x91, 0xe4, 0x8c, 0xd4,
    0x38, 0x18, 0xeb, 0x10, 0x67, 0x16, 0xb3, 0xb1, 0xc3, 0x54, 0x33, 0xc1,
    0xd1, 0xc9, 0x2e, 0x1a, 0x9d, 0x0c, 0x2b, 0xaa, 0x01, 0x3a, 0x8d, 0x59,
    0x7c, 0xff, 0x47, 0xfb, 0xbe, 0xff, 0xc9, 0x4f, 0x7e, 0xe8, 0x65, 0x66,
    0x76, 0x24, 0xd2, 0x05, 0x64, 0x1a, 0xa4, 0xce, 0x38, 0xc1, 0xec, 0xd4,
    0x59, 0x2f, 0x4d, 0x26, 0xbe, 0x7c, 0xc9, 0xf1, 0xca, 0xf2, 0x04, 0x00,
    0xc4, 0x13, 0xe3, 0x32, 0x7a, 0xc7, 0x6d, 0x1c, 0x86, 0x0a, 0x6b, 0xd7,
    0x8e, 0x1d, 0xde, 0xb5, 0xe7, 0xf0, 0xf4, 0x86, 0x35, 0x03, 0x1f, 0x5a,
    0x3d, 0x52, 0x09, 0x01, 0x41, 0xa3, 0x93, 0xa1, 0xde, 0x31, 0xe8, 0x24,
    0x0e, 0xad, 0xd8, 0xa2, 0x1d, 0x1b, 0xf4, 0x12, 0x83, 0xee, 0x82, 0xa3,
    0xd5, 0x33, 0x98, 0x6d, 0xe7, 0x38, 0xdb, 0xca, 0x71, 0x72, 0x3a, 0x46,
    0x3b, 0xce, 0x11, 0x68, 0x0d, 0xca, 0x2d, 0x7e, 0xf2, 0x93, 0x23, 0xdd,
    0x13, 0xa7, 0x1b, 0xcf, 0x3f, 0xfc, 0xd0, 0x87, 0x5f, 0x35, 0x96, 0xad,
    0x73, 0x1c, 0x8b, 0x71, 0x0d, 0x61, 0x9e, 0x32, 0xc6, 0x4c, 0xe7, 0x62,
    0xba, 0x07, 0xc3, 0x97, 0x2c, 0x0e, 0x1c, 0xb8, 0xa4, 0x7f, 0x97, 0x9d,
    0x0b, 0x01, 0xdb, 0x05, 0x07, 0x3e, 0x6d, 0x65, 0xa3, 0xf4, 0xc2, 0x71,
    0x99, 0xbe, 0xf5, 0xd6, 0x75, 0x3b, 0x5e, 0xdd, 0x77, 0xe6, 0x50, 0xfc,
    0x3f, 0x47, 0xbe, 0x74, 0xf7, 0x96, 0x75, 0xf7, 0x8c, 0x8f, 0x0f, 0x41,
    0x7b, 0x04, 0xc7, 0x82, 0x66, 0x2f, 0x47, 0xee, 0x00, 0xeb, 0x16, 0x4d,
    0xd7, 0x11, 0x28, 0x20, 0xf0, 0x15, 0x7c, 0x4f, 0x43, 0x3b, 0x07, 0x4e,
    0x12, 0xfc, 0xfc, 0xc8, 0x34, 0x8e, 0x9d, 0x98, 0x79, 0xed, 0xfe, 0xfb,
    0x6e, 0xda, 0x31, 0x32, 0x36, 0xd4, 0x6a, 0xb7, 0x73, 0x2b, 0xd6, 0xc4,
    0xda, 0xb9, 0x86, 0x12, 0x3e, 0xab, 0xe1, 0xa6, 0x91, 0xa3, 0x37, 0xe3,
    0x29, 0x8b, 0xed, 0xdb, 0x97, 0xec, 0x53, 0xae, 0xb8, 0x90, 0xdf, 0xfd,
    0x85, 0x6f, 0xeb, 0xf5, 0x83, 0xa5, 0xd2, 0x8a, 0x35, 0x7d, 0x03, 0xe3,
    0x83, 0x7d, 0x63, 0x43, 0x03, 0xd1, 0xd8, 0xfe, 0x83, 0xa7, 0xee, 0x9e,
    0x6d, 0x24, 0x9f, 0xb8, 0xf1, 0x86, 0x81, 0x0f, 0x57, 0x2b, 0x11, 0x06,
    0xfb, 0x43, 0x88, 0xd2, 0x17, 0x54, 0x6a, 0x40, 0x6b, 0x41, 0xdc, 0xcb,
    0x71, 0xf6, 0x6c, 0x1b, 0x07, 0x0f, 0x9f, 0x45, 0x10, 0x78, 0x3f, 0xbd,
    0x6d, 0xe3, 0xf0, 0xee, 0x5f, 0xbf, 0xf7, 0xb6, 0xa3, 0xbd, 0xc4, 0x71,
    0x2f, 0xce, 0x4c, 0xaf, 0x97, 0xc5, 0xcd, 0x4e, 0x3e, 0xdb, 0x6e, 0xc5,
    0x53, 0xb3, 0xb3, 0xd9, 0x54, 0x7d, 0xb6, 0xd1, 0xdc, 0x7f, 0x3a, 0x4d,
    0xf6, 0x3e, 0xff, 0xf9, 0xf7, 0x36, 0x99, 0x9b, 0xc7, 0xde, 0xe7, 0x0f,
    0xf1, 0xd8, 0x1f, 0x0e, 0xa5, 0x2e, 0xd9, 0xd0, 0xb4, 0x95, 0x5c, 0xd2,
    0xcc, 0xb3, 0xb7, 0x6e, 0x5a, 0xb7, 0x3b, 0x0c, 0xf5, 0x5b, 0xed, 0x56,
    0x77, 0xec, 0xa7, 0x3f, 0x7b, 0x67, 0xf3, 0xc4, 0xe9, 0xee, 0x86, 0xd9,
    0x56, 0x72, 0x43, 0x9c, 0xf0, 0xb0, 0x75, 0x5c, 0x22, 0x22, 0x78, 0x5a,
    0x25, 0xe5, 0x90, 0x1b, 0x83, 0x83, 0xfe, 0xe9, 0xb5, 0x37, 0x0e, 0x1e,
    0xfb, 0xec, 0x43, 0xb7, 0xbf, 0xbd, 0x72, 0x7c, 0xb8, 0x93, 0xe6, 0x2c,
    0x67, 0x67, 0x62, 0x9b, 0x26, 0x36, 0x4b, 0x92, 0xac, 0x17, 0xf7, 0xd2,
    0xd9, 0x76, 0x2f, 0xaf, 0xb7, 0xdb, 0xe9, 0x74, 0x2f, 0xcb, 0x5b, 0x8d,
    0xfd, 0x27, 0xd3, 0xbd, 0x3b, 0x66, 0x2e, 0xfb, 0xae, 0x7a, 0xd5, 0x5b,
    0xe9, 0x63, 0x8f, 0xfd, 0xab, 0x1e, 0xfd, 0x95, 0xd1, 0x70, 0x45, 0xad,
    0x5c, 0xad, 0x94, 0xc3, 0x41, 0x3f, 0x0a, 0x87, 0xc2, 0x90, 0x06, 0x7d,
    0xed, 0xd7, 0x82, 0x40, 0x95, 0x3c, 0x5f, 0xf9, 0x44, 0xa4, 0x99, 0xa1,
    0x8a, 0x17, 0x5e, 0x14, 0x55, 0xaa, 0x58, 0x6d, 0x02, 0x66, 0xb6, 0xcc,
    0x2e, 0xcb, 0x9c, 0xc9, 0xb3, 0x3c, 0x35, 0xc6, 0x75, 0x7a, 0x89, 0x9b,
    0xcd, 0x92, 0xac, 0xd1, 0x6a, 0x25, 0xb3, 0xcd, 0x7a, 0xdc, 0xed, 0x4d,
    0xf5, 0xb2, 0xef, 0x7c, 0xe7, 0xb7, 0xaf, 0xdd, 0x74, 0xfa, 0x42, 0x7c,
    0xe6, 0x99, 0x17, 0xf5, 0x2d, 0x61, 0xc9, 0xab, 0x94, 0xfc, 0x52, 0x50,
    0xf2, 0x6a, 0xda, 0xf7, 0xfb, 0x43, 0x5f, 0xf7, 0x2b, 0xad, 0xaa, 0x20,
    0x94, 0x1d, 0x4b, 0xc8, 0x86, 0x3d, 0x27, 0xe2, 0x39, 0x27, 0xa4, 0x00,
    0x28, 0x0d, 0x51, 0x04, 0xa7, 0x08, 0xc6, 0x59, 0x97, 0x59, 0xc7, 0x89,
    0xb3, 0xd2, 0xc9, 0x0d, 0xb7, 0x8c, 0x31, 0xad, 0xb4, 0xc7, 0x9d, 0x5e,
    0xd2, 0x4a, 0xa6, 0x0e, 0x86, 0x76, 0xe7, 0xce, 0x07, 0xaf, 0xfd, 0xf7,
    0x81, 0x8b, 0x48, 0x7c, 0xe6, 0x45, 0x1a, 0xb9, 0x63, 0x5a, 0x57, 0xab,
    0x2b, 0x7c, 0xed, 0xc2, 0x52, 0xe8, 0xe9, 0x32, 0x29, 0x29, 0x1b, 0xeb,
    0x2a, 0xc6, 0x4a, 0x64, 0x72, 0x09, 0x9d, 0x75, 0x3e, 0x73, 0xd1, 0xb2,
    0x2b, 0x0d, 0xd6, 0x4a, 0x8c, 0x22, 0x64, 0x42, 0x92, 0xb2, 0x43, 0x6c,
    0xd8, 0xf4, 0x00, 0xc4, 0x12, 0x9b, 0xe4, 0x64, 0x37, 0x31, 0xd1, 0xd4,
    0x90, 0xdb, 0xb9, 0xf3, 0xc1, 0x5f, 0xdc, 0x17, 0x9a, 0x4b, 0xe1, 0x57,
    0xff, 0x7c, 0x9b, 0xfa, 0xa0, 0x59, 0xa9, 0x74, 0x32, 0xe6, 0x41, 0xb3,
    0x1f, 0x27, 0x69, 0x90, 0xc7, 0x79, 0x90, 0x32, 0xfb, 0xc2, 0x5a, 0x5b,
    0x66, 0xa5, 0x99, 0x40, 0x11, 0x31, 0xb1, 0x73, 0x9a, 0xc4, 0x68, 0x25,
    0x46, 0xc4, 0xe5, 0x89, 0x5f, 0xc9, 0x9d, 0x49, 0x6c, 0x77, 0xdf, 0x04,
    0xef, 0xd9, 0xf3, 0xa7, 0xd7, 0xe7, 0x1b, 0xd9, 0x52, 0x78, 0xe4, 0x91,
    0x47, 0xc8, 0xb9, 0x5b, 0xd5, 0xcc, 0x4c, 0x9f, 0xe2, 0x61, 0x26, 0xc9,
    0x2a, 0x2a, 0xd6, 0x29, 0x39, 0xe3, 0x13, 0x00, 0x68, 0xdf, 0x88, 0x45,
    0x2e, 0x39, 0xe7, 0xe2, 0x7a, 0x35, 0x76, 0xc3, 0x1d, 0x3e, 0xca, 0x3f,
    0xe3, 0xe5, 0x4a, 0xe4, 0x95, 0xe0, 0x9a, 0x11, 0xb8, 0x18, 0xcf, 0x5c,
    0x34, 0x41, 0x00, 0x36, 0x01, 0xd8, 0xf6, 0x9e, 0x1c, 0xfe, 0x7f, 0x87,
    0xff, 0x05, 0x9d, 0xcf, 0x22, 0x85, 0x68, 0x03, 0x62, 0x47, 0x00, 0x00,
    0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char img4_tpmmanagerwidgetbase[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x2d,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xe8, 0x4a, 0xe8, 0xc2, 0x00, 0x00, 0x0d,
    0x1d, 0x49, 0x44, 0x41, 0x54, 0x68, 0x81, 0xed, 0x99, 0x59, 0x8c, 0x64,
    0xd5, 0x79, 0xc7, 0x7f, 0xe7, 0x9c, 0x7b, 0x6f, 0xdd, 0xda, 0xba, 0xaa,
    0xba, 0x7b, 0xba, 0x7b, 0x36, 0x4f, 0xcf, 0x0c, 0x30, 0x30, 0xc3, 0x62,
    0x96, 0xe0, 0x10, 0x83, 0x4c, 0x9c, 0x58, 0x71, 0xac, 0x10, 0x21, 0x48,
    0x64, 0x09, 0x27, 0x56, 0x24, 0x1e, 0xf2, 0x60, 0x45, 0x91, 0xe5, 0xc8,
    0x8a, 0xa5, 0x88, 0x07, 0x9b, 0x28, 0xc1, 0x49, 0xec, 0x27, 0x84, 0xa2,
    0x28, 0x2f, 0x56, 0xe4, 0x6c, 0x60, 0xd9, 0x72, 0x02, 0x1a, 0x84, 0x03,
    0xc9, 0xc4, 0x92, 0x01, 0x3b, 0xec, 0x30, 0x30, 0xf4, 0xf4, 0x4c, 0x77,
    0x4f, 0x6f, 0x55, 0x5d, 0x7b, 0xdd, 0xfd, 0x9c, 0x93, 0x87, 0x5b, 0xc3,
    0xb0, 0xcc, 0x8a, 0x27, 0x7e, 0x09, 0x9f, 0x74, 0xa5, 0x53, 0xf7, 0x9e,
    0x7b, 0xee, 0xf7, 0xff, 0x96, 0xff, 0xf9, 0xbe, 0x53, 0xf0, 0x91, 0x7c,
    0x24, 0xff, 0xbf, 0x45, 0x5c, 0xce, 0xc5, 0xac, 0x39, 0x21, 0xc0, 0xc5,
    0xe2, 0x00, 0x72, 0x7c, 0xd7, 0x20, 0xc8, 0x80, 0x04, 0x21, 0xf7, 0xda,
    0xcb, 0xf9, 0x3d, 0xb8, 0x0c, 0x00, 0x8c, 0xd9, 0x10, 0xc7, 0x3f, 0xbf,
    0x63, 0xa2, 0x35, 0xe4, 0xb3, 0xd7, 0xcc, 0xea, 0xbb, 0x80, 0xeb, 0x12,
    0xc3, 0xee, 0x24, 0x96, 0x35, 0x00, 0x25, 0x6c, 0xbf, 0xe8, 0xdb, 0x53,
    0xe5, 0x12, 0xaf, 0xb7, 0xda, 0xe2, 0xc9, 0xa1, 0x96, 0xdf, 0xdf, 0xff,
    0xcf, 0x6f, 0xb7, 0x85, 0xdc, 0x6b, 0x7e, 0x6e, 0xed, 0xf9, 0x39, 0x00,
    0x3c, 0x7e, 0x27, 0x72, 0xcf, 0xb4, 0xb7, 0x7b, 0xc2, 0xcf, 0xbe, 0xb1,
    0xab, 0xee, 0xdf, 0xc3, 0xee, 0xbd, 0x65, 0x3e, 0xf9, 0x19, 0xa8, 0x4e,
    0xe6, 0x13, 0xd2, 0x64, 0xfc, 0x05, 0x05, 0x8e, 0xca, 0xc7, 0x6f, 0x3c,
    0x0b, 0xaf, 0x3f, 0x1f, 0xd3, 0x69, 0x3d, 0xb9, 0xd2, 0xe1, 0xab, 0xbb,
    0xe6, 0xeb, 0xc7, 0xc4, 0x83, 0x6d, 0xfd, 0x0b, 0x05, 0xf0, 0xf8, 0x9d,
    0x88, 0x62, 0x51, 0xce, 0xee, 0xa9, 0x88, 0x3f, 0xdd, 0x7b, 0x68, 0xf6,
    0x8f, 0xf8, 0xd4, 0x3d, 0x92, 0xbd, 0xd7, 0x42, 0xb1, 0x0e, 0x9e, 0x0f,
    0x49, 0x04, 0x3a, 0x01, 0x1d, 0xe5, 0x2f, 0x58, 0x05, 0x8e, 0x9b, 0x3f,
    0xd3, 0x26, 0x7f, 0xd6, 0x3c, 0x01, 0x47, 0x7e, 0x68, 0xa3, 0x17, 0x9e,
    0xff, 0xee, 0xcf, 0x36, 0xd4, 0x9f, 0xf5, 0x87, 0xfa, 0xe4, 0xe7, 0x9e,
    0xe1, 0x43, 0x85, 0xd7, 0x25, 0x01, 0x78, 0xe8, 0x20, 0xf2, 0xa6, 0x39,
    0xae, 0xbc, 0x65, 0x8e, 0x7f, 0xac, 0xff, 0xfe, 0xfd, 0x37, 0x72, 0xfd,
    0xed, 0xe0, 0xf8, 0x10, 0x07, 0x20, 0x34, 0x78, 0x55, 0x50, 0x2a, 0x57,
    0xf4, 0xb4, 0x3e, 0x3a, 0x3d, 0xb3, 0x40, 0x38, 0x02, 0x9b, 0x82, 0x57,
    0x86, 0x42, 0x09, 0x9a, 0xcb, 0x44, 0xdf, 0xfe, 0xea, 0xe2, 0x33, 0x6f,
    0xf2, 0x85, 0x67, 0xda, 0x3c, 0xf7, 0xd0, 0xeb, 0x5c, 0xb2, 0x37, 0x2e,
    0x1a, 0xc0, 0xe3, 0x77, 0x22, 0x80, 0x5b, 0x6e, 0xdb, 0xc1, 0x0f, 0xeb,
    0x7f, 0xf9, 0xf7, 0xb3, 0x94, 0xaa, 0x30, 0x68, 0x82, 0xd6, 0x50, 0xf0,
    0x41, 0xba, 0xb9, 0xe2, 0x26, 0x65, 0xd8, 0x4f, 0x68, 0xf6, 0x2d, 0xdd,
    0x6e, 0x9f, 0x1b, 0xf6, 0xba, 0x48, 0xc7, 0xcf, 0xbd, 0x20, 0xc9, 0xe7,
    0x47, 0x51, 0xee, 0xa1, 0x6d, 0xf3, 0x60, 0x0d, 0x9d, 0x3f, 0xf9, 0x83,
    0xfe, 0xb3, 0xcb, 0xfc, 0xde, 0x8b, 0x27, 0x78, 0xe2, 0x6b, 0x2b, 0x64,
    0x97, 0x02, 0x40, 0x5d, 0xcc, 0xa4, 0xc3, 0x77, 0x20, 0xaa, 0xbe, 0xb8,
    0xe1, 0xd3, 0x87, 0x9c, 0x27, 0xfd, 0x3f, 0xff, 0xee, 0x36, 0xa2, 0x11,
    0xac, 0xbf, 0x0d, 0x56, 0x82, 0x90, 0x10, 0x8f, 0x60, 0xd8, 0x83, 0x61,
    0x87, 0xe7, 0x9f, 0x7d, 0x85, 0xe7, 0x8e, 0x59, 0x5e, 0xdf, 0xda, 0xc6,
    0x7f, 0x3c, 0xbf, 0xcc, 0x13, 0x3f, 0x7a, 0x89, 0x5d, 0xee, 0x16, 0xb3,
    0x5e, 0x0a, 0xc3, 0x6e, 0x1e, 0x62, 0x12, 0xc8, 0x34, 0xac, 0x1c, 0x85,
    0x2c, 0xa5, 0xf8, 0x9b, 0xf7, 0x16, 0xf6, 0x1e, 0x7f, 0xe2, 0xb7, 0x53,
    0xc5, 0xcb, 0x87, 0x56, 0x39, 0xfe, 0x54, 0xc6, 0x45, 0x27, 0xf8, 0x45,
    0x01, 0xf8, 0xda, 0xad, 0xde, 0xfe, 0x9b, 0x6f, 0xa8, 0xfd, 0x1b, 0x5f,
    0xfa, 0x9b, 0x9d, 0xb4, 0x4f, 0xc1, 0xd2, 0x4b, 0x20, 0x55, 0x1e, 0x3a,
    0x9d, 0x4d, 0x68, 0x6f, 0x42, 0xb7, 0x09, 0xfd, 0x16, 0x87, 0x7f, 0x72,
    0x8a, 0xc2, 0x55, 0x9f, 0xa3, 0xd9, 0xda, 0x62, 0x75, 0x75, 0x95, 0x85,
    0x95, 0x36, 0xc9, 0xa9, 0x63, 0xdc, 0x31, 0x1d, 0x43, 0xb7, 0x0d, 0xa3,
    0x2e, 0x74, 0xb6, 0x20, 0x1b, 0x82, 0xd5, 0xf0, 0xc6, 0x4b, 0xd0, 0xdb,
    0x44, 0x5e, 0x71, 0x93, 0x37, 0x78, 0xe5, 0xe8, 0xaf, 0x57, 0x67, 0xcc,
    0x4f, 0x6f, 0x16, 0xac, 0x1c, 0xee, 0x5e, 0x5c, 0x4e, 0x38, 0x17, 0x9a,
    0x10, 0xdf, 0x8f, 0xf2, 0x8a, 0xc9, 0x5f, 0x73, 0xc7, 0xef, 0xee, 0x63,
    0xf1, 0x55, 0x58, 0x3b, 0x06, 0x85, 0x2a, 0x0c, 0x47, 0x10, 0x84, 0x90,
    0x8d, 0x93, 0x36, 0xce, 0x59, 0x67, 0x23, 0x98, 0xc6, 0xd7, 0x96, 0x7e,
    0xbf, 0x4f, 0x18, 0x86, 0x84, 0x61, 0xc8, 0x5b, 0x8b, 0x6d, 0x38, 0x39,
    0xc8, 0xc3, 0x4c, 0x79, 0xe0, 0x7b, 0xe0, 0x78, 0xf9, 0x58, 0x3a, 0xf0,
    0xca, 0xff, 0x80, 0x19, 0xb0, 0x7b, 0x32, 0xdd, 0xb6, 0x36, 0xe0, 0xa1,
    0x1b, 0xf6, 0xf1, 0xf9, 0x6f, 0xc3, 0xd2, 0x97, 0x17, 0xc9, 0xe0, 0xfc,
    0x40, 0x2e, 0x08, 0xe0, 0xed, 0x9e, 0x77, 0xfb, 0xc1, 0x9d, 0xf5, 0xbb,
    0x69, 0x9f, 0x84, 0x13, 0x8b, 0x30, 0x51, 0x07, 0xba, 0x90, 0x46, 0x10,
    0x04, 0x90, 0x85, 0xf9, 0xd8, 0x1a, 0x48, 0xa0, 0xb9, 0xa9, 0x98, 0x1e,
    0x8d, 0x18, 0x8d, 0xaf, 0x24, 0x49, 0x68, 0x0d, 0x22, 0xe2, 0xa5, 0x4d,
    0x94, 0x2f, 0x50, 0x4a, 0x21, 0xa4, 0xca, 0x95, 0x77, 0x3c, 0xf0, 0x24,
    0x18, 0x0f, 0xbd, 0xd5, 0xa2, 0x13, 0x28, 0x1c, 0xa9, 0x6f, 0x46, 0x88,
    0x2f, 0xec, 0xde, 0x69, 0x1f, 0xf9, 0xd2, 0x22, 0xdd, 0x87, 0x21, 0x3d,
    0x9f, 0x7e, 0xe7, 0x05, 0xf0, 0xe2, 0x5d, 0xae, 0x4c, 0x63, 0xfb, 0x75,
    0x3a, 0x2d, 0x58, 0x5c, 0x80, 0x60, 0x2b, 0xb7, 0xba, 0x1d, 0x42, 0x10,
    0xa1, 0xb3, 0x94, 0x24, 0x30, 0x24, 0x06, 0x8c, 0x05, 0x6b, 0x2d, 0x03,
    0x59, 0x25, 0x08, 0x02, 0x06, 0x83, 0x01, 0x51, 0x14, 0x11, 0x45, 0x11,
    0x41, 0x98, 0xb1, 0x31, 0xd2, 0x38, 0x21, 0x28, 0xa1, 0x91, 0x02, 0x94,
    0x8c, 0x70, 0x24, 0xf8, 0xd2, 0xe0, 0x15, 0x25, 0xa3, 0x00, 0xda, 0x71,
    0xee, 0xa4, 0x28, 0xb6, 0xf7, 0x4f, 0x55, 0xf8, 0xd1, 0x15, 0x7b, 0x79,
    0xf5, 0xc6, 0x45, 0x46, 0x2f, 0x70, 0xee, 0xc4, 0x3e, 0x2f, 0x80, 0x4e,
    0xa6, 0xaf, 0xae, 0x7a, 0xe2, 0x57, 0x8e, 0x6e, 0x39, 0x5c, 0x6d, 0x96,
    0x41, 0x44, 0x40, 0x9b, 0x20, 0x80, 0xc4, 0x40, 0xac, 0x05, 0xb1, 0xb6,
    0xc4, 0xb1, 0x40, 0x5b, 0x91, 0x83, 0x88, 0x06, 0xf4, 0x7a, 0xbd, 0x77,
    0xc2, 0x27, 0x4d, 0x53, 0xa6, 0xdd, 0x8c, 0xe6, 0x40, 0xe4, 0x8a, 0x0b,
    0x8b, 0x94, 0x12, 0x09, 0xb8, 0xd2, 0xe2, 0x78, 0x02, 0x37, 0x02, 0x90,
    0xe8, 0xc4, 0x62, 0x52, 0x10, 0x19, 0xbb, 0x6d, 0xca, 0x6f, 0xcd, 0x56,
    0x59, 0xfd, 0x4c, 0x9d, 0xec, 0x85, 0x2e, 0x9a, 0x73, 0x84, 0xd2, 0x79,
    0x01, 0x18, 0x63, 0xee, 0x31, 0x56, 0x39, 0x41, 0x60, 0xe8, 0x92, 0x10,
    0x9b, 0xd3, 0x8a, 0x1a, 0x22, 0x23, 0xc9, 0x0c, 0x24, 0x46, 0x90, 0x19,
    0xd0, 0xd6, 0x62, 0x2c, 0xc8, 0x2c, 0x62, 0x34, 0x1c, 0x32, 0x1a, 0x8d,
    0x88, 0xe3, 0x98, 0x34, 0x8e, 0x98, 0x70, 0x0d, 0xa3, 0xd0, 0x22, 0xc7,
    0xa4, 0x2d, 0x85, 0x41, 0x08, 0x81, 0x74, 0x41, 0x26, 0xa0, 0x04, 0x08,
    0xa5, 0x00, 0x4d, 0x6a, 0x40, 0x09, 0x44, 0x6a, 0xf8, 0x55, 0xbf, 0xcc,
    0x53, 0x73, 0x13, 0x04, 0x5f, 0xec, 0x92, 0x7e, 0x07, 0x92, 0x4b, 0x06,
    0x00, 0xdc, 0x29, 0x05, 0x94, 0x4a, 0x92, 0x75, 0x3c, 0x90, 0xa0, 0x12,
    0x8d, 0xb1, 0x8a, 0xd4, 0x0a, 0xb4, 0xb1, 0x64, 0x36, 0x57, 0xde, 0x5a,
    0x20, 0x05, 0x67, 0xb8, 0xc9, 0xa0, 0xdd, 0x24, 0x8a, 0x22, 0xe2, 0x38,
    0x46, 0x99, 0x14, 0x5f, 0x18, 0x22, 0x9d, 0x87, 0xfb, 0x19, 0xb1, 0x48,
    0x0d, 0xca, 0x05, 0x21, 0x2c, 0x36, 0x16, 0x60, 0x2d, 0x4a, 0x83, 0x56,
    0x80, 0x65, 0x5e, 0xb9, 0x5c, 0x55, 0x2c, 0xb2, 0xd2, 0xa8, 0x12, 0x30,
    0x20, 0x83, 0x0f, 0xd2, 0xab, 0x7c, 0xff, 0x8d, 0xf7, 0x78, 0x20, 0xe5,
    0xa0, 0x6b, 0x15, 0x15, 0x99, 0x31, 0xa1, 0x33, 0x2a, 0x32, 0xc3, 0x15,
    0x16, 0x57, 0x58, 0x7c, 0x69, 0x28, 0x48, 0x4b, 0x41, 0xe6, 0xe3, 0xa2,
    0xb2, 0x14, 0x7d, 0xcb, 0x7e, 0xb3, 0x86, 0x8c, 0x72, 0x06, 0x4a, 0x92,
    0x04, 0xdf, 0x24, 0xcc, 0xf9, 0x86, 0xaa, 0x27, 0x28, 0x38, 0xef, 0xbd,
    0x5c, 0x25, 0x90, 0x46, 0xa0, 0xb4, 0x00, 0x6b, 0xf0, 0x7c, 0x89, 0x57,
    0x91, 0xa4, 0x09, 0xa4, 0x86, 0x9a, 0x81, 0xdd, 0xbe, 0xc7, 0xd4, 0x6c,
    0x8d, 0xd2, 0x6f, 0x9c, 0x83, 0xf2, 0xcf, 0xe7, 0x01, 0x91, 0x25, 0x34,
    0xaa, 0x05, 0x3d, 0x4e, 0xb4, 0xdc, 0xd5, 0xe9, 0x78, 0x19, 0x43, 0x9e,
    0xb8, 0xc6, 0x8e, 0x37, 0x60, 0x80, 0x04, 0xae, 0x6c, 0x58, 0x56, 0x93,
    0x0e, 0x71, 0x1c, 0x93, 0x24, 0x09, 0x33, 0x4e, 0xcc, 0xbe, 0x1a, 0xd4,
    0x4a, 0x79, 0xfc, 0xc8, 0x0c, 0x8c, 0x0b, 0xd8, 0xf7, 0x9a, 0x53, 0x67,
    0x0a, 0xd7, 0x13, 0x24, 0xb1, 0x46, 0x5b, 0x10, 0x50, 0x90, 0x30, 0x8d,
    0x62, 0xaa, 0xe8, 0xb2, 0xb1, 0xa7, 0xce, 0x90, 0xee, 0x07, 0x69, 0xf5,
    0xbc, 0x21, 0x64, 0x1d, 0x7c, 0xb7, 0x60, 0xf1, 0x24, 0x94, 0x4b, 0xa0,
    0xf0, 0xc6, 0xda, 0x1b, 0x70, 0x0d, 0xd6, 0x5a, 0xec, 0x38, 0xf6, 0x8d,
    0xcd, 0x01, 0x5c, 0x5b, 0x34, 0xbc, 0x18, 0xf4, 0x88, 0x22, 0xc8, 0xb2,
    0x8c, 0x99, 0x62, 0xc6, 0x75, 0x75, 0xcd, 0x9c, 0x0f, 0x78, 0xbc, 0x13,
    0xc9, 0xc6, 0x8e, 0x81, 0x8c, 0x25, 0x1b, 0xdf, 0x1f, 0xc8, 0x77, 0x80,
    0x0a, 0xe3, 0x30, 0x81, 0xc3, 0x64, 0xc1, 0xa5, 0x52, 0x49, 0x70, 0xef,
    0x00, 0x79, 0x84, 0xf7, 0xd6, 0x4b, 0xe7, 0x04, 0x70, 0x2f, 0x08, 0x91,
    0x11, 0x03, 0x05, 0x5f, 0x81, 0x12, 0x3e, 0x34, 0x4a, 0x60, 0x3c, 0x70,
    0x72, 0xdb, 0x09, 0x6b, 0x10, 0xd6, 0x20, 0x13, 0xf2, 0x7d, 0xc0, 0x1a,
    0xb6, 0x47, 0x31, 0x53, 0x51, 0x48, 0x9a, 0x3a, 0xa4, 0x69, 0xca, 0xc7,
    0x66, 0x0c, 0xbb, 0x1a, 0x92, 0x7a, 0x61, 0x1c, 0xad, 0xfe, 0x69, 0xf0,
    0x67, 0x40, 0x6b, 0x17, 0x94, 0x30, 0xf4, 0x46, 0x90, 0x75, 0x15, 0x4a,
    0x80, 0x71, 0xb0, 0x40, 0x11, 0xa8, 0x2a, 0x41, 0x79, 0x87, 0x87, 0x33,
    0x13, 0x7c, 0xb0, 0x76, 0xbb, 0x50, 0x12, 0x77, 0xd3, 0x58, 0xcc, 0xa6,
    0x2e, 0x78, 0xd6, 0x80, 0xaa, 0x41, 0xb5, 0x94, 0xd7, 0x3f, 0x63, 0x85,
    0xb1, 0x06, 0x4a, 0x67, 0xc6, 0x45, 0x21, 0x99, 0x0b, 0x0d, 0x71, 0x1c,
    0x93, 0x65, 0x19, 0xf3, 0x93, 0x92, 0xfa, 0xce, 0x7a, 0xbe, 0xe3, 0x72,
    0x06, 0xa8, 0x48, 0x40, 0x8d, 0xdf, 0x55, 0x00, 0x61, 0x42, 0xa0, 0x13,
    0xb4, 0xca, 0x3d, 0x9e, 0xe4, 0xdc, 0xaf, 0xa4, 0xa0, 0x68, 0x14, 0xbe,
    0x2c, 0xe1, 0x0c, 0xbb, 0x97, 0x00, 0x60, 0x13, 0x84, 0x74, 0x39, 0x11,
    0x5a, 0x35, 0xab, 0xad, 0xce, 0xad, 0x5f, 0xf4, 0x61, 0x66, 0x2e, 0x57,
    0xc6, 0x6a, 0x72, 0x33, 0x66, 0xf9, 0x95, 0x8c, 0xf7, 0x1a, 0x21, 0x99,
    0xad, 0x0f, 0xc8, 0xb2, 0x80, 0x2c, 0xcb, 0xd8, 0x3b, 0x5d, 0x84, 0xfa,
    0x24, 0x64, 0x63, 0x0f, 0xb8, 0x63, 0x10, 0xc9, 0xbb, 0x0c, 0x00, 0x50,
    0x1c, 0xd0, 0x5e, 0xee, 0x93, 0x44, 0x09, 0x5e, 0x19, 0x88, 0x09, 0x13,
    0x83, 0x50, 0x02, 0xd7, 0x95, 0x38, 0x23, 0x0f, 0x15, 0x9c, 0xa5, 0x7a,
    0x3e, 0x27, 0x80, 0x21, 0x08, 0x29, 0xf8, 0xaf, 0x30, 0xd5, 0x9f, 0xe8,
    0xa4, 0x8a, 0x89, 0xfa, 0x1e, 0xa8, 0x35, 0x60, 0xc7, 0x15, 0xe0, 0xe4,
    0x94, 0x87, 0xcd, 0x20, 0x8e, 0x21, 0x0a, 0x21, 0x8a, 0xf3, 0x7b, 0x42,
    0xb0, 0x7d, 0xa7, 0x24, 0x4d, 0x7b, 0x68, 0xad, 0xd9, 0xbb, 0x7b, 0x16,
    0xca, 0x53, 0xb9, 0xd7, 0x4e, 0x7f, 0x2d, 0x7d, 0x97, 0xd7, 0x4e, 0x7b,
    0xe5, 0xcd, 0x26, 0x83, 0x58, 0x53, 0x74, 0x04, 0xa9, 0x14, 0x48, 0x61,
    0xba, 0xe4, 0xf1, 0x2e, 0x51, 0x48, 0x34, 0x62, 0x66, 0x6c, 0x22, 0xde,
    0x95, 0xc8, 0xe7, 0x04, 0x50, 0x01, 0x3b, 0x0c, 0x79, 0xb4, 0xe8, 0x98,
    0xaf, 0x50, 0x91, 0x92, 0x92, 0x0f, 0x77, 0xde, 0x05, 0xfd, 0x0e, 0x54,
    0x1a, 0x80, 0x84, 0x2c, 0x85, 0xa8, 0x0f, 0x5b, 0x4d, 0x28, 0x0c, 0x21,
    0xd5, 0xe0, 0x2a, 0x76, 0x4b, 0x48, 0xd3, 0x05, 0xb4, 0xd6, 0xcc, 0x1f,
    0xd8, 0x05, 0xe5, 0x1a, 0x88, 0x31, 0x68, 0xc8, 0xbd, 0x07, 0xf9, 0xef,
    0x28, 0x86, 0x60, 0x44, 0x12, 0x0c, 0xd1, 0x4a, 0x52, 0x77, 0x5c, 0xfa,
    0x69, 0x82, 0x95, 0xb4, 0x22, 0x4d, 0x0c, 0x20, 0xc5, 0xb9, 0x0b, 0xba,
    0x73, 0x02, 0x98, 0x01, 0xbb, 0xb6, 0xca, 0xc2, 0xb6, 0x03, 0xbc, 0x5c,
    0x75, 0xf4, 0xc7, 0x59, 0x5f, 0x83, 0xf6, 0x2a, 0x1c, 0xf8, 0x14, 0x18,
    0x9d, 0xf7, 0xba, 0xda, 0x40, 0xd0, 0x05, 0x55, 0xcc, 0x81, 0x98, 0x0c,
    0x84, 0xc0, 0xab, 0xcd, 0xb1, 0xf6, 0xe8, 0x15, 0xb9, 0xfd, 0xac, 0xcd,
    0x15, 0x16, 0x63, 0xfe, 0x15, 0x22, 0x67, 0xf4, 0xcc, 0x82, 0x8e, 0x21,
    0x1c, 0xc2, 0xc6, 0x1a, 0x91, 0x86, 0xdd, 0x65, 0x81, 0x5b, 0xc8, 0xe8,
    0x6e, 0x31, 0x10, 0x2e, 0x01, 0x29, 0x23, 0x09, 0xa9, 0xb1, 0x68, 0x14,
    0x76, 0xe5, 0x2c, 0x7a, 0x9e, 0xb3, 0x1f, 0x38, 0x08, 0x62, 0xce, 0xc7,
    0x99, 0x98, 0xa4, 0xe7, 0x95, 0xbd, 0xbb, 0xa7, 0x65, 0x02, 0x3a, 0x83,
    0xfd, 0xd7, 0xc2, 0xb6, 0x03, 0x79, 0xfb, 0xe8, 0xd6, 0xa0, 0x50, 0x03,
    0xaf, 0x94, 0x97, 0xd8, 0xd5, 0x19, 0x28, 0x4f, 0xf3, 0xd4, 0xab, 0xeb,
    0x7c, 0xf6, 0x8f, 0x1f, 0xe5, 0x5b, 0xff, 0xf2, 0x02, 0x57, 0x1d, 0x9c,
    0xe7, 0xca, 0x43, 0xd7, 0x40, 0xb9, 0x01, 0xb5, 0x29, 0xa8, 0xcd, 0x42,
    0x65, 0x1a, 0x2a, 0x35, 0xf0, 0xcb, 0x79, 0xa7, 0x66, 0x46, 0x14, 0xa2,
    0x16, 0x8d, 0xd9, 0x39, 0xfa, 0x9d, 0x1e, 0x61, 0x62, 0xdf, 0xd6, 0x09,
    0xdd, 0xd4, 0xb0, 0x11, 0xc3, 0xa6, 0xce, 0x58, 0xc9, 0x06, 0x34, 0xdf,
    0x1c, 0x10, 0x2d, 0x5d, 0x2c, 0x8d, 0x3e, 0x06, 0x76, 0x7f, 0x8c, 0x9e,
    0xeb, 0xf3, 0x5c, 0xb9, 0x98, 0x3c, 0x7f, 0xa0, 0x91, 0xfc, 0x92, 0x10,
    0x12, 0x7e, 0xf2, 0x38, 0xdc, 0x7d, 0x2b, 0x48, 0x1f, 0x5c, 0x0b, 0xca,
    0x80, 0x33, 0x09, 0xb5, 0x34, 0xdf, 0x1f, 0x84, 0xe5, 0xcb, 0x7f, 0xf1,
    0x4d, 0x36, 0xb7, 0x06, 0xc4, 0x71, 0xcc, 0x1f, 0x3e, 0xf8, 0xef, 0x2c,
    0xdf, 0xf7, 0xc5, 0x71, 0xfa, 0x59, 0x40, 0xe4, 0xfd, 0x73, 0x9a, 0x80,
    0x48, 0x21, 0x4d, 0x61, 0x75, 0x01, 0x6e, 0xbf, 0x17, 0x16, 0x5e, 0xa6,
    0xf5, 0xd2, 0x72, 0xc7, 0x57, 0xa6, 0x97, 0xba, 0xf4, 0x65, 0x46, 0xac,
    0x24, 0x43, 0x32, 0xc2, 0x60, 0x88, 0x9e, 0xb9, 0xd4, 0x52, 0xe2, 0xb5,
    0x2e, 0x59, 0x94, 0x30, 0x88, 0x22, 0x1e, 0x79, 0x75, 0xcd, 0xed, 0x32,
    0x35, 0x95, 0xc7, 0xe2, 0x8f, 0x1f, 0x01, 0x3a, 0x20, 0xc6, 0xbd, 0xb0,
    0x37, 0x01, 0x85, 0x6d, 0xd8, 0xe2, 0x76, 0xac, 0xbf, 0x03, 0x6d, 0x04,
    0x5a, 0x6b, 0xac, 0xb5, 0x79, 0xed, 0x5f, 0x9e, 0x87, 0xd2, 0x1e, 0x28,
    0xed, 0x84, 0xd2, 0x2c, 0x14, 0xb7, 0x41, 0xfd, 0x63, 0x79, 0x72, 0xaf,
    0xbc, 0x02, 0x57, 0x5c, 0x0f, 0xf5, 0x6d, 0xac, 0x3e, 0xf7, 0x42, 0xec,
    0x97, 0xe4, 0x92, 0x23, 0x65, 0xe8, 0x2a, 0x86, 0xc2, 0x65, 0xa0, 0xa0,
    0x07, 0x8c, 0xc2, 0x8c, 0x64, 0xf3, 0x2c, 0x15, 0xe9, 0x79, 0x5b, 0xca,
    0x0a, 0x88, 0xeb, 0xa7, 0x10, 0xe5, 0x09, 0x12, 0x17, 0x13, 0x15, 0x57,
    0x8e, 0xde, 0x5a, 0xba, 0xe7, 0x7e, 0x85, 0xa3, 0xf2, 0x0f, 0x4f, 0x78,
    0x50, 0x98, 0xc8, 0x27, 0x0b, 0x0b, 0xc2, 0x01, 0x21, 0xd9, 0x3b, 0xff,
    0x31, 0x9e, 0x7e, 0xe6, 0x08, 0xc5, 0xa2, 0xcf, 0xc3, 0x0f, 0xff, 0x15,
    0x57, 0x5d, 0x7d, 0x00, 0x21, 0x4e, 0x33, 0xa0, 0x06, 0x29, 0x21, 0x58,
    0x82, 0x85, 0x9f, 0x42, 0x65, 0x12, 0x84, 0x62, 0xf9, 0x5b, 0x5f, 0xd7,
    0x71, 0xa5, 0xf1, 0x56, 0xa9, 0x20, 0xba, 0x6e, 0xc1, 0xb4, 0xad, 0xd6,
    0xed, 0x38, 0xe5, 0x54, 0x98, 0xb2, 0x14, 0x0e, 0x59, 0x7b, 0x2d, 0x66,
    0xf0, 0x83, 0xf0, 0x83, 0xcd, 0xcd, 0x85, 0x4e, 0x25, 0xc4, 0x57, 0xea,
    0xf8, 0xb7, 0x1c, 0x60, 0x6e, 0xdf, 0x76, 0x0e, 0x16, 0x5c, 0xf5, 0x3b,
    0x55, 0x4f, 0xdc, 0xb7, 0xef, 0x9b, 0x7f, 0xe7, 0x21, 0x3c, 0x68, 0x2e,
    0x40, 0x6d, 0x06, 0xa6, 0xe7, 0x73, 0xcb, 0x32, 0x41, 0x4e, 0xf4, 0xef,
    0xb7, 0x8b, 0x26, 0x6f, 0xac, 0xfa, 0x30, 0x6c, 0xc2, 0x60, 0x35, 0xa7,
    0xde, 0x4a, 0x1d, 0x36, 0x8e, 0xf3, 0xda, 0x37, 0x1e, 0xcc, 0xbc, 0xf9,
    0x7d, 0xc7, 0x1a, 0x15, 0xd1, 0x2e, 0xe8, 0x51, 0x27, 0xee, 0x74, 0xb6,
    0xba, 0xad, 0xfe, 0xa9, 0x8d, 0xae, 0x79, 0x63, 0xb3, 0xcb, 0x6b, 0xeb,
    0x8b, 0x2c, 0xfd, 0x60, 0x9d, 0xfe, 0xe1, 0xb3, 0x74, 0x67, 0x17, 0x6c,
    0xea, 0xaf, 0x8b, 0x60, 0xde, 0x87, 0x6a, 0x1d, 0x67, 0xaa, 0xa1, 0x22,
    0xeb, 0x56, 0x23, 0xe7, 0x99, 0x47, 0xf7, 0x15, 0x6e, 0xba, 0xc5, 0x63,
    0x6a, 0x3e, 0x67, 0x99, 0x61, 0x13, 0x46, 0xeb, 0x79, 0xa7, 0x96, 0x75,
    0x20, 0xdb, 0x04, 0xdb, 0x03, 0xdd, 0x06, 0xbd, 0x05, 0xe1, 0x26, 0x84,
    0x6b, 0xd0, 0x39, 0x01, 0x61, 0x17, 0x54, 0x21, 0xaf, 0xea, 0x7e, 0xfc,
    0x7d, 0xde, 0xfa, 0x87, 0x7f, 0x0a, 0x0b, 0x37, 0xdd, 0x76, 0xac, 0xb1,
    0x67, 0xb6, 0x57, 0x9d, 0xae, 0xf4, 0x94, 0x32, 0x3d, 0x1d, 0x27, 0xed,
    0x28, 0x0c, 0x97, 0x7b, 0x23, 0x73, 0xa2, 0xb3, 0xc5, 0xea, 0xd1, 0x2d,
    0xfa, 0xdf, 0x89, 0x48, 0xb8, 0xd4, 0x10, 0x02, 0xf8, 0x19, 0xd8, 0x43,
    0x0a, 0x3b, 0x55, 0x85, 0x5a, 0x09, 0x55, 0x9f, 0xab, 0x26, 0xf1, 0xe4,
    0xae, 0xbe, 0x38, 0xf2, 0xe4, 0xb4, 0xb7, 0xfe, 0xfa, 0x04, 0x53, 0xdb,
    0xa0, 0x3e, 0x97, 0x27, 0xb5, 0x04, 0xc2, 0x7e, 0x4e, 0xa9, 0xa3, 0x66,
    0x7e, 0x02, 0x11, 0x0f, 0xf3, 0xa6, 0x5f, 0x49, 0x48, 0xe3, 0xbc, 0x87,
    0x3e, 0x7a, 0x04, 0xbe, 0xf7, 0x30, 0xc7, 0x8e, 0x27, 0xcd, 0xd2, 0x2f,
    0x7f, 0xfa, 0x78, 0x79, 0xfb, 0xec, 0xa0, 0x32, 0x3b, 0xdd, 0x55, 0x56,
    0x0f, 0xe2, 0xc1, 0xa8, 0x1b, 0xf6, 0x06, 0xab, 0xc3, 0xad, 0xd1, 0x89,
    0x66, 0x47, 0x2f, 0xaf, 0x9f, 0xa4, 0xf5, 0x9f, 0x2d, 0x82, 0x05, 0xce,
    0x7e, 0xe8, 0x75, 0xc1, 0xa6, 0x1e, 0xb0, 0x4f, 0xb7, 0x48, 0xa7, 0x1a,
    0x74, 0xeb, 0x53, 0x66, 0xa5, 0x14, 0x64, 0x7e, 0x65, 0xa6, 0xe8, 0xea,
    0x3d, 0x9f, 0x08, 0x36, 0x42, 0x73, 0xf5, 0xcc, 0xa3, 0x7f, 0x7b, 0x9d,
    0x70, 0x6d, 0x83, 0x3d, 0x1f, 0x97, 0xec, 0x9a, 0x87, 0xda, 0xf4, 0x99,
    0xb3, 0x50, 0xc8, 0x79, 0x3f, 0x1a, 0xc2, 0xc6, 0x0a, 0xbc, 0xf9, 0x12,
    0x2c, 0x2d, 0xda, 0x85, 0xea, 0x95, 0x9d, 0xc2, 0xf5, 0xf7, 0xac, 0x4c,
    0xd4, 0x1b, 0x41, 0xb1, 0x56, 0x0e, 0xfd, 0xaa, 0x37, 0xa0, 0xdf, 0x0a,
    0xc2, 0x51, 0xda, 0x0b, 0x06, 0xf1, 0xda, 0x60, 0x90, 0x9e, 0x1c, 0x0e,
    0x92, 0x95, 0x76, 0x9b, 0xd6, 0x7a, 0xc6, 0xe8, 0xf0, 0x87, 0xed, 0x89,
    0x4f, 0xcb, 0x11, 0xd0, 0x33, 0xc7, 0x08, 0xe7, 0x66, 0x69, 0x55, 0x4b,
    0x81, 0xab, 0xb6, 0x0d, 0x54, 0xa1, 0x3e, 0x49, 0x79, 0xf7, 0xae, 0x38,
    0x3a, 0x74, 0xdf, 0xc6, 0x68, 0xb3, 0xb7, 0x3d, 0x3e, 0xb9, 0xb8, 0xa3,
    0xf1, 0xe6, 0x53, 0x8d, 0x68, 0xd0, 0x2d, 0x05, 0x41, 0x50, 0xc0, 0x8c,
    0x8b, 0x1f, 0x21, 0x8d, 0xe3, 0x97, 0xa2, 0xa8, 0x34, 0x13, 0xf4, 0x26,
    0xf7, 0xf7, 0x1a, 0xbf, 0x76, 0x57, 0xb7, 0x5a, 0xf6, 0x13, 0xaf, 0x5a,
    0x4a, 0x4a, 0xd3, 0xf5, 0x81, 0xd4, 0x41, 0xa2, 0xdb, 0xcd, 0x30, 0x6a,
    0x6e, 0xf4, 0x46, 0x5b, 0xad, 0xb5, 0xd1, 0x56, 0xe7, 0x44, 0xbf, 0xd5,
    0x3d, 0xb9, 0xbc, 0xce, 0xfa, 0x52, 0x9b, 0xfe, 0xd3, 0x2d, 0x52, 0xce,
    0x73, 0xb4, 0x72, 0x51, 0x00, 0x00, 0x1e, 0x03, 0x3d, 0xf7, 0xdf, 0x0c,
    0xdd, 0x3b, 0xa2, 0x75, 0x66, 0x7a, 0x4c, 0x79, 0x5b, 0xc6, 0x2d, 0x14,
    0x13, 0xb7, 0xa0, 0xa2, 0xfa, 0x9e, 0xe9, 0x01, 0xfb, 0xe7, 0xd7, 0xd2,
    0x58, 0x57, 0x64, 0xaa, 0x8b, 0x7e, 0x68, 0xdc, 0x34, 0xd3, 0x2a, 0xcb,
    0x32, 0x91, 0x66, 0x9a, 0x54, 0x08, 0xeb, 0x15, 0x7d, 0xb3, 0xa3, 0x52,
    0xd1, 0xc5, 0x5a, 0x35, 0x2e, 0x14, 0xdd, 0x58, 0x99, 0x30, 0xb5, 0xc3,
    0x8d, 0x34, 0xeb, 0xb6, 0x83, 0xb8, 0xbd, 0xd1, 0x0b, 0x97, 0xd7, 0xd7,
    0x07, 0xab, 0xcd, 0xa5, 0xce, 0xa9, 0x8d, 0x93, 0x6b, 0x4b, 0xe1, 0xea,
    0xcb, 0xcb, 0x74, 0x5e, 0xdb, 0x20, 0x7a, 0x7f, 0xfd, 0xff, 0xa1, 0x01,
    0x00, 0xf6, 0x61, 0xc8, 0x58, 0x65, 0xe0, 0x95, 0x36, 0xad, 0x2f, 0x9c,
    0xd4, 0x51, 0x32, 0x72, 0x92, 0x68, 0x28, 0x82, 0xde, 0x4e, 0x59, 0xa9,
    0x4f, 0xfb, 0xa5, 0x72, 0xb5, 0x58, 0xa9, 0x14, 0xed, 0x64, 0xd9, 0xd5,
    0xa2, 0xa0, 0x8c, 0x45, 0x1a, 0x6d, 0x24, 0x80, 0x54, 0xd2, 0x48, 0x8c,
    0xc1, 0xf4, 0xb5, 0x68, 0x0d, 0x32, 0x1d, 0xf4, 0x63, 0x3d, 0xec, 0x0d,
    0xe3, 0xad, 0x4e, 0x27, 0x6c, 0x35, 0x37, 0xfb, 0xeb, 0xdd, 0x53, 0xad,
    0x95, 0xad, 0x53, 0xcb, 0x2b, 0xc3, 0x8d, 0xc5, 0x25, 0x3a, 0xcf, 0x6e,
    0x10, 0x1d, 0xbe, 0x80, 0xf2, 0x97, 0x0a, 0x20, 0x07, 0xb1, 0x40, 0x3a,
    0xb5, 0xc0, 0xc0, 0x2d, 0xac, 0x66, 0xfb, 0xc2, 0x20, 0x96, 0x71, 0xb7,
    0xef, 0x07, 0xf5, 0x2d, 0xaf, 0x58, 0x99, 0xb3, 0x95, 0xca, 0x34, 0x4e,
    0xa9, 0x86, 0xef, 0x97, 0xb4, 0x70, 0x0b, 0x56, 0x5a, 0x17, 0x9d, 0x13,
    0x85, 0x06, 0x6d, 0xac, 0xce, 0x44, 0x16, 0x26, 0xa6, 0x37, 0x0c, 0xb3,
    0x38, 0x18, 0xc6, 0xfd, 0x41, 0x27, 0x1c, 0xf6, 0x9a, 0xc1, 0x7a, 0x7b,
    0xa3, 0xb3, 0xd9, 0xd9, 0x5c, 0x5a, 0xa3, 0xdd, 0x3b, 0x4a, 0xff, 0x44,
    0x9f, 0xf8, 0x7c, 0x71, 0xff, 0x6e, 0xf9, 0xd0, 0x7f, 0x70, 0x3c, 0x00,
    0xea, 0xc6, 0xdb, 0xf0, 0xf6, 0xed, 0xa0, 0xdc, 0x98, 0x69, 0xd4, 0xbc,
    0xfa, 0xc4, 0x94, 0x3f, 0x51, 0x6a, 0x58, 0xe9, 0x4e, 0x4a, 0xdf, 0xab,
    0x66, 0x56, 0x96, 0x4d, 0x4a, 0xc1, 0x5a, 0xeb, 0x08, 0x21, 0x10, 0x58,
    0x6d, 0xad, 0x4d, 0xa5, 0x8e, 0x82, 0x6c, 0x14, 0x0d, 0xe3, 0x70, 0xd4,
    0x4f, 0x47, 0x71, 0xa7, 0xdf, 0x1e, 0x76, 0xd6, 0x4e, 0x25, 0xdd, 0x93,
    0x2d, 0x86, 0xc7, 0xda, 0x04, 0x27, 0x9b, 0x24, 0x8f, 0x9d, 0xa5, 0x64,
    0xb8, 0xec, 0x00, 0x4e, 0xbf, 0xff, 0xc0, 0x35, 0xa8, 0x43, 0x05, 0x0a,
    0x57, 0xee, 0xc3, 0x9f, 0xa8, 0xaa, 0xb2, 0xf2, 0x8a, 0x15, 0xe5, 0xb8,
    0x65, 0x8d, 0x28, 0xea, 0x4c, 0x79, 0x5a, 0x5a, 0x05, 0x08, 0xcf, 0x60,
    0xb4, 0xd4, 0x59, 0x96, 0x26, 0x91, 0x49, 0x93, 0xa0, 0x1d, 0xa4, 0x41,
    0xbf, 0x47, 0x70, 0x72, 0x93, 0x60, 0x6d, 0x99, 0xe8, 0x5f, 0x3b, 0x24,
    0x6f, 0x70, 0xee, 0x03, 0xac, 0xff, 0x2b, 0x00, 0x00, 0x3c, 0x00, 0x62,
    0xfd, 0x26, 0xd4, 0x27, 0x53, 0x9c, 0x19, 0x0f, 0x37, 0xaa, 0xe1, 0x16,
    0x24, 0xae, 0x6f, 0x91, 0xc6, 0xa2, 0xa4, 0x0b, 0x91, 0x86, 0xd8, 0xa0,
    0x75, 0x80, 0xd6, 0x19, 0xe9, 0xf2, 0x80, 0xec, 0x78, 0x8b, 0x74, 0x63,
    0x8b, 0xec, 0xb1, 0x0f, 0xa1, 0xf8, 0x65, 0x05, 0xf0, 0xee, 0xf5, 0xee,
    0x05, 0x31, 0x05, 0x72, 0x0e, 0x38, 0x01, 0xb2, 0xb1, 0x63, 0xfc, 0x64,
    0x15, 0x3a, 0xc0, 0x08, 0xcc, 0x71, 0x60, 0x1f, 0x98, 0xc7, 0x72, 0xa5,
    0x2f, 0xfb, 0x3f, 0x97, 0x1f, 0xc9, 0x2f, 0x52, 0xfe, 0x17, 0xf2, 0x3c,
    0xe4, 0xee, 0xf7, 0xfd, 0x10, 0x56, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45,
    0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};


/*
 *  Constructs a TPM_ManagerWidgetBase as a child of 'parent', with the
 *  name 'name' and widget flags set to 'f'.
 *
 *  The dialog will by default be modeless, unless you set 'modal' to
 *  TRUE to construct a modal dialog.
 */
TPM_ManagerWidgetBase::TPM_ManagerWidgetBase( QWidget* parent, const char* name, bool modal, WFlags fl )
    : QDialog( parent, name, modal, fl )
{
    QImage img;
    img.loadFromData( img0_tpmmanagerwidgetbase, sizeof( img0_tpmmanagerwidgetbase ), "PNG" );
    image0 = img;
    img.loadFromData( img1_tpmmanagerwidgetbase, sizeof( img1_tpmmanagerwidgetbase ), "PNG" );
    image1 = img;
    img.loadFromData( img2_tpmmanagerwidgetbase, sizeof( img2_tpmmanagerwidgetbase ), "PNG" );
    image2 = img;
    img.loadFromData( img3_tpmmanagerwidgetbase, sizeof( img3_tpmmanagerwidgetbase ), "PNG" );
    image3 = img;
    img.loadFromData( img4_tpmmanagerwidgetbase, sizeof( img4_tpmmanagerwidgetbase ), "PNG" );
    image4 = img;
    if ( !name )
	setName( "TPM_ManagerWidgetBase" );
    setPaletteForegroundColor( QColor( 0, 85, 127 ) );
    setSizeGripEnabled( TRUE );
    TPM_ManagerWidgetBaseLayout = new QVBoxLayout( this, 11, 6, "TPM_ManagerWidgetBaseLayout"); 

    layout87 = new QVBoxLayout( 0, 0, 6, "layout87"); 

    layout86 = new QHBoxLayout( 0, 0, 6, "layout86"); 

    layout57 = new QVBoxLayout( 0, 0, 6, "layout57"); 

    listBox = new QListBox( this, "listBox" );
    listBox->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)5, 0, 1, listBox->sizePolicy().hasHeightForWidth() ) );
    listBox->setPaletteForegroundColor( QColor( 0, 85, 127 ) );
    listBox->setPaletteBackgroundColor( QColor( 239, 239, 239 ) );
    listBox->setFocusPolicy( QListBox::StrongFocus );
    listBox->setFrameShape( QListBox::StyledPanel );
    listBox->setFrameShadow( QListBox::Raised );
    listBox->setLineWidth( 1 );
    layout57->addWidget( listBox );

    buttonGroup1 = new QButtonGroup( this, "buttonGroup1" );
    buttonGroup1->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)1, 0, 0, buttonGroup1->sizePolicy().hasHeightForWidth() ) );
    buttonGroup1->setFrameShape( QButtonGroup::GroupBoxPanel );
    buttonGroup1->setFrameShadow( QButtonGroup::Raised );
    buttonGroup1->setLineWidth( 1 );
    buttonGroup1->setColumnLayout(0, Qt::Vertical );
    buttonGroup1->layout()->setSpacing( 6 );
    buttonGroup1->layout()->setMargin( 11 );
    buttonGroup1Layout = new QVBoxLayout( buttonGroup1->layout() );
    buttonGroup1Layout->setAlignment( Qt::AlignTop );

    layout56 = new QGridLayout( 0, 1, 1, 5, 6, "layout56"); 

    myEnabledLabel = new QLabel( buttonGroup1, "myEnabledLabel" );
    myEnabledLabel->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)5, 0, 0, myEnabledLabel->sizePolicy().hasHeightForWidth() ) );
    myEnabledLabel->setPixmap( image0 );

    layout56->addWidget( myEnabledLabel, 0, 0 );

    textLabel3_4_2 = new QLabel( buttonGroup1, "textLabel3_4_2" );
    textLabel3_4_2->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 0, 0, textLabel3_4_2->sizePolicy().hasHeightForWidth() ) );

    layout56->addWidget( textLabel3_4_2, 1, 1 );

    myOwnerLabel = new QLabel( buttonGroup1, "myOwnerLabel" );
    myOwnerLabel->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)5, 0, 0, myOwnerLabel->sizePolicy().hasHeightForWidth() ) );
    myOwnerLabel->setPixmap( image1 );

    layout56->addWidget( myOwnerLabel, 2, 0 );
    spacer48 = new QSpacerItem( 2, 20, QSizePolicy::Minimum, QSizePolicy::Minimum );
    layout56->addItem( spacer48, 2, 3 );
    spacer47 = new QSpacerItem( 2, 20, QSizePolicy::Minimum, QSizePolicy::Minimum );
    layout56->addMultiCell( spacer47, 1, 1, 2, 3 );
    spacer45 = new QSpacerItem( 2, 20, QSizePolicy::Minimum, QSizePolicy::Minimum );
    layout56->addMultiCell( spacer45, 0, 0, 2, 3 );

    textLabel3_4 = new QLabel( buttonGroup1, "textLabel3_4" );
    textLabel3_4->setEnabled( TRUE );
    textLabel3_4->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 0, 0, textLabel3_4->sizePolicy().hasHeightForWidth() ) );

    layout56->addWidget( textLabel3_4, 0, 1 );

    textLabel3_4_3 = new QLabel( buttonGroup1, "textLabel3_4_3" );
    textLabel3_4_3->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 0, 0, textLabel3_4_3->sizePolicy().hasHeightForWidth() ) );

    layout56->addMultiCellWidget( textLabel3_4_3, 2, 2, 1, 2 );

    myActivatedLabel = new QLabel( buttonGroup1, "myActivatedLabel" );
    myActivatedLabel->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)5, 0, 0, myActivatedLabel->sizePolicy().hasHeightForWidth() ) );
    myActivatedLabel->setPixmap( image2 );

    layout56->addWidget( myActivatedLabel, 1, 0 );
    buttonGroup1Layout->addLayout( layout56 );
    layout57->addWidget( buttonGroup1 );
    spacer49 = new QSpacerItem( 20, 12, QSizePolicy::Minimum, QSizePolicy::Fixed );
    layout57->addItem( spacer49 );
    layout86->addLayout( layout57 );

    widgetStack1 = new QWidgetStack( this, "widgetStack1" );
    widgetStack1->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 2, 0, widgetStack1->sizePolicy().hasHeightForWidth() ) );

    WStackPage = new QWidget( widgetStack1, "WStackPage" );
    WStackPageLayout = new QVBoxLayout( WStackPage, 11, 6, "WStackPageLayout"); 

    tabInfo = new QTabWidget( WStackPage, "tabInfo" );
    tabInfo->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)7, 1, 1, tabInfo->sizePolicy().hasHeightForWidth() ) );

    tabStatus = new QWidget( tabInfo, "tabStatus" );
    tabStatusLayout = new QVBoxLayout( tabStatus, 11, 6, "tabStatusLayout"); 

    layout87_2 = new QVBoxLayout( 0, 15, 6, "layout87_2"); 

    textLabel1_2 = new QLabel( tabStatus, "textLabel1_2" );
    textLabel1_2->setBackgroundMode( QLabel::PaletteBackground );
    textLabel1_2->setPaletteBackgroundColor( QColor( 180, 180, 180 ) );
    textLabel1_2->setBackgroundOrigin( QLabel::WindowOrigin );
    layout87_2->addWidget( textLabel1_2 );

    layout86_2 = new QHBoxLayout( 0, 0, 6, "layout86_2"); 
    spacer16 = new QSpacerItem( 20, 20, QSizePolicy::Minimum, QSizePolicy::Minimum );
    layout86_2->addItem( spacer16 );

    layout85 = new QGridLayout( 0, 1, 1, 0, 6, "layout85"); 

    tpmActivated = new QLabel( tabStatus, "tpmActivated" );
    tpmActivated->setMinimumSize( QSize( 20, 0 ) );
    tpmActivated->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignLeft ) );

    layout85->addWidget( tpmActivated, 4, 2 );

    tssFound = new QLabel( tabStatus, "tssFound" );
    tssFound->setMinimumSize( QSize( 20, 0 ) );
    tssFound->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignLeft ) );

    layout85->addWidget( tssFound, 1, 2 );
    spacer7_4 = new QSpacerItem( 24, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout85->addItem( spacer7_4, 4, 1 );

    textLabel2_2 = new QLabel( tabStatus, "textLabel2_2" );
    textLabel2_2->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)5, 1, 0, textLabel2_2->sizePolicy().hasHeightForWidth() ) );
    textLabel2_2->setAlignment( int( QLabel::AlignVCenter ) );

    layout85->addWidget( textLabel2_2, 2, 0 );
    spacer7_5 = new QSpacerItem( 24, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout85->addItem( spacer7_5, 5, 1 );

    TPM_ACtive_Status = new QLabel( tabStatus, "TPM_ACtive_Status" );
    TPM_ACtive_Status->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)5, 0, 0, TPM_ACtive_Status->sizePolicy().hasHeightForWidth() ) );
    TPM_ACtive_Status->setAlignment( int( QLabel::AlignVCenter ) );

    layout85->addWidget( TPM_ACtive_Status, 4, 0 );

    driverFound = new QLabel( tabStatus, "driverFound" );
    driverFound->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)5, 1, 0, driverFound->sizePolicy().hasHeightForWidth() ) );
    driverFound->setMinimumSize( QSize( 20, 0 ) );
    driverFound->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignLeft ) );

    layout85->addWidget( driverFound, 0, 2 );

    textLabel3 = new QLabel( tabStatus, "textLabel3" );
    textLabel3->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 2, 0, textLabel3->sizePolicy().hasHeightForWidth() ) );
    textLabel3->setAlignment( int( QLabel::AlignVCenter ) );

    layout85->addWidget( textLabel3, 5, 0 );
    spacer7_3 = new QSpacerItem( 24, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout85->addItem( spacer7_3, 3, 1 );

    foundLabel = new QLabel( tabStatus, "foundLabel" );
    foundLabel->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)5, 2, 0, foundLabel->sizePolicy().hasHeightForWidth() ) );
    foundLabel->setAlignment( int( QLabel::AlignVCenter ) );

    layout85->addWidget( foundLabel, 0, 0 );
    spacer7_3_4 = new QSpacerItem( 24, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout85->addItem( spacer7_3_4, 0, 1 );

    textLabel2 = new QLabel( tabStatus, "textLabel2" );
    textLabel2->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)5, 0, 0, textLabel2->sizePolicy().hasHeightForWidth() ) );
    textLabel2->setAlignment( int( QLabel::AlignVCenter ) );

    layout85->addWidget( textLabel2, 3, 0 );

    myEndorsementAvailable = new QLabel( tabStatus, "myEndorsementAvailable" );
    myEndorsementAvailable->setMinimumSize( QSize( 20, 0 ) );
    myEndorsementAvailable->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignLeft ) );

    layout85->addWidget( myEndorsementAvailable, 2, 2 );
    spacer7_3_3 = new QSpacerItem( 24, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout85->addItem( spacer7_3_3, 1, 1 );

    ownerSet = new QLabel( tabStatus, "ownerSet" );
    ownerSet->setMinimumSize( QSize( 20, 0 ) );
    ownerSet->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignLeft ) );

    layout85->addWidget( ownerSet, 5, 2 );
    spacer7_3_2 = new QSpacerItem( 24, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout85->addItem( spacer7_3_2, 2, 1 );

    textLabel1 = new QLabel( tabStatus, "textLabel1" );
    textLabel1->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)5, 0, 0, textLabel1->sizePolicy().hasHeightForWidth() ) );
    textLabel1->setAlignment( int( QLabel::AlignVCenter ) );

    layout85->addWidget( textLabel1, 1, 0 );

    tpmEnabled = new QLabel( tabStatus, "tpmEnabled" );
    tpmEnabled->setMinimumSize( QSize( 20, 0 ) );
    tpmEnabled->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignLeft ) );

    layout85->addWidget( tpmEnabled, 3, 2 );
    layout86_2->addLayout( layout85 );
    spacer17 = new QSpacerItem( 20, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout86_2->addItem( spacer17 );
    layout87_2->addLayout( layout86_2 );
    spacer76 = new QSpacerItem( 100, 22, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout87_2->addItem( spacer76 );
    tabStatusLayout->addLayout( layout87_2 );
    tabInfo->insertTab( tabStatus, QString::fromLatin1("") );

    tabDetails = new QWidget( tabInfo, "tabDetails" );
    tabDetailsLayout = new QVBoxLayout( tabDetails, 11, 6, "tabDetailsLayout"); 

    layout33 = new QVBoxLayout( 0, 15, 6, "layout33"); 

    textLabel1_2_2 = new QLabel( tabDetails, "textLabel1_2_2" );
    textLabel1_2_2->setBackgroundMode( QLabel::PaletteBackground );
    textLabel1_2_2->setPaletteBackgroundColor( QColor( 180, 180, 180 ) );
    textLabel1_2_2->setBackgroundOrigin( QLabel::WindowOrigin );
    layout33->addWidget( textLabel1_2_2 );

    layout73 = new QHBoxLayout( 0, 0, 6, "layout73"); 
    spacer26_2_2 = new QSpacerItem( 20, 20, QSizePolicy::MinimumExpanding, QSizePolicy::Minimum );
    layout73->addItem( spacer26_2_2 );

    layout72 = new QVBoxLayout( 0, 0, 6, "layout72"); 

    layout69 = new QHBoxLayout( 0, 0, 6, "layout69"); 
    spacer6 = new QSpacerItem( 5, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    layout69->addItem( spacer6 );

    Vendor = new QLabel( tabDetails, "Vendor" );
    layout69->addWidget( Vendor );
    spacer54 = new QSpacerItem( 16, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout69->addItem( spacer54 );

    tpmVendor = new QLineEdit( tabDetails, "tpmVendor" );
    tpmVendor->setEnabled( FALSE );
    tpmVendor->setMinimumSize( QSize( 220, 0 ) );
    tpmVendor->setPaletteForegroundColor( QColor( 33, 33, 33 ) );
    QPalette pal;
    QColorGroup cg;
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 221, 223, 228) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, white );
    cg.setColor( QColorGroup::Dark, QColor( 85, 85, 85) );
    cg.setColor( QColorGroup::Mid, QColor( 199, 199, 199) );
    cg.setColor( QColorGroup::Text, QColor( 33, 33, 33) );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 239, 239, 239) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, QColor( 103, 141, 178) );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, QColor( 0, 0, 238) );
    cg.setColor( QColorGroup::LinkVisited, QColor( 82, 24, 139) );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 221, 223, 228) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, white );
    cg.setColor( QColorGroup::Dark, QColor( 85, 85, 85) );
    cg.setColor( QColorGroup::Mid, QColor( 199, 199, 199) );
    cg.setColor( QColorGroup::Text, QColor( 33, 33, 33) );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 239, 239, 239) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, QColor( 103, 141, 178) );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, QColor( 0, 0, 238) );
    cg.setColor( QColorGroup::LinkVisited, QColor( 82, 24, 139) );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 221, 223, 228) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, white );
    cg.setColor( QColorGroup::Dark, QColor( 85, 85, 85) );
    cg.setColor( QColorGroup::Mid, QColor( 199, 199, 199) );
    cg.setColor( QColorGroup::Text, QColor( 33, 33, 33) );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 239, 239, 239) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, QColor( 86, 117, 148) );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, QColor( 0, 0, 238) );
    cg.setColor( QColorGroup::LinkVisited, QColor( 82, 24, 139) );
    pal.setDisabled( cg );
    tpmVendor->setPalette( pal );
    tpmVendor->setFrameShape( QLineEdit::LineEditPanel );
    tpmVendor->setFrameShadow( QLineEdit::Sunken );
    tpmVendor->setLineWidth( 2 );
    layout69->addWidget( tpmVendor );
    layout72->addLayout( layout69 );

    layout70 = new QHBoxLayout( 0, 0, 6, "layout70"); 
    spacer5 = new QSpacerItem( 5, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    layout70->addItem( spacer5 );

    TPM_Version = new QLabel( tabDetails, "TPM_Version" );
    layout70->addWidget( TPM_Version );
    spacer54_2 = new QSpacerItem( 16, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout70->addItem( spacer54_2 );

    tpmVersion = new QLineEdit( tabDetails, "tpmVersion" );
    tpmVersion->setEnabled( FALSE );
    tpmVersion->setMinimumSize( QSize( 220, 0 ) );
    tpmVersion->setPaletteForegroundColor( QColor( 33, 33, 33 ) );
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 221, 223, 228) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, white );
    cg.setColor( QColorGroup::Dark, QColor( 85, 85, 85) );
    cg.setColor( QColorGroup::Mid, QColor( 199, 199, 199) );
    cg.setColor( QColorGroup::Text, QColor( 33, 33, 33) );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 239, 239, 239) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, QColor( 103, 141, 178) );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, QColor( 0, 0, 238) );
    cg.setColor( QColorGroup::LinkVisited, QColor( 82, 24, 139) );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 221, 223, 228) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, white );
    cg.setColor( QColorGroup::Dark, QColor( 85, 85, 85) );
    cg.setColor( QColorGroup::Mid, QColor( 199, 199, 199) );
    cg.setColor( QColorGroup::Text, QColor( 33, 33, 33) );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 239, 239, 239) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, QColor( 103, 141, 178) );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, QColor( 0, 0, 238) );
    cg.setColor( QColorGroup::LinkVisited, QColor( 82, 24, 139) );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 221, 223, 228) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, white );
    cg.setColor( QColorGroup::Dark, QColor( 85, 85, 85) );
    cg.setColor( QColorGroup::Mid, QColor( 199, 199, 199) );
    cg.setColor( QColorGroup::Text, QColor( 33, 33, 33) );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 239, 239, 239) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, QColor( 86, 117, 148) );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, QColor( 0, 0, 238) );
    cg.setColor( QColorGroup::LinkVisited, QColor( 82, 24, 139) );
    pal.setDisabled( cg );
    tpmVersion->setPalette( pal );
    tpmVersion->setLineWidth( 2 );
    layout70->addWidget( tpmVersion );
    layout72->addLayout( layout70 );

    layout71 = new QHBoxLayout( 0, 0, 6, "layout71"); 
    spacer4 = new QSpacerItem( 19, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    layout71->addItem( spacer4 );

    TPM_Distribution = new QLabel( tabDetails, "TPM_Distribution" );
    layout71->addWidget( TPM_Distribution );
    spacer54_3 = new QSpacerItem( 16, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout71->addItem( spacer54_3 );

    tpmFirmware = new QLineEdit( tabDetails, "tpmFirmware" );
    tpmFirmware->setEnabled( FALSE );
    tpmFirmware->setMinimumSize( QSize( 220, 0 ) );
    tpmFirmware->setPaletteForegroundColor( QColor( 33, 33, 33 ) );
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 221, 223, 228) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, white );
    cg.setColor( QColorGroup::Dark, QColor( 85, 85, 85) );
    cg.setColor( QColorGroup::Mid, QColor( 199, 199, 199) );
    cg.setColor( QColorGroup::Text, QColor( 33, 33, 33) );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 239, 239, 239) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, QColor( 103, 141, 178) );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, QColor( 0, 0, 238) );
    cg.setColor( QColorGroup::LinkVisited, QColor( 82, 24, 139) );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 221, 223, 228) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, white );
    cg.setColor( QColorGroup::Dark, QColor( 85, 85, 85) );
    cg.setColor( QColorGroup::Mid, QColor( 199, 199, 199) );
    cg.setColor( QColorGroup::Text, QColor( 33, 33, 33) );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 239, 239, 239) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, QColor( 103, 141, 178) );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, QColor( 0, 0, 238) );
    cg.setColor( QColorGroup::LinkVisited, QColor( 82, 24, 139) );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 221, 223, 228) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, white );
    cg.setColor( QColorGroup::Dark, QColor( 85, 85, 85) );
    cg.setColor( QColorGroup::Mid, QColor( 199, 199, 199) );
    cg.setColor( QColorGroup::Text, QColor( 33, 33, 33) );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 239, 239, 239) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, QColor( 86, 117, 148) );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, QColor( 0, 0, 238) );
    cg.setColor( QColorGroup::LinkVisited, QColor( 82, 24, 139) );
    pal.setDisabled( cg );
    tpmFirmware->setPalette( pal );
    tpmFirmware->setLineWidth( 2 );
    layout71->addWidget( tpmFirmware );
    layout72->addLayout( layout71 );
    layout73->addLayout( layout72 );
    spacer26_3 = new QSpacerItem( 20, 20, QSizePolicy::MinimumExpanding, QSizePolicy::Minimum );
    layout73->addItem( spacer26_3 );
    layout33->addLayout( layout73 );

    textLabel1_2_3 = new QLabel( tabDetails, "textLabel1_2_3" );
    textLabel1_2_3->setBackgroundMode( QLabel::PaletteBackground );
    textLabel1_2_3->setPaletteBackgroundColor( QColor( 180, 180, 180 ) );
    textLabel1_2_3->setBackgroundOrigin( QLabel::WindowOrigin );
    layout33->addWidget( textLabel1_2_3 );

    layout32 = new QHBoxLayout( 0, 0, 6, "layout32"); 
    spacer26_2 = new QSpacerItem( 20, 20, QSizePolicy::MinimumExpanding, QSizePolicy::Minimum );
    layout32->addItem( spacer26_2 );

    layout31 = new QVBoxLayout( 0, 0, 6, "layout31"); 

    layout29 = new QHBoxLayout( 0, 0, 6, "layout29"); 
    spacer37_3 = new QSpacerItem( 0, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    layout29->addItem( spacer37_3 );

    TSS_Version = new QLabel( tabDetails, "TSS_Version" );
    layout29->addWidget( TSS_Version );
    spacer3 = new QSpacerItem( 16, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout29->addItem( spacer3 );

    tssVendor = new QLineEdit( tabDetails, "tssVendor" );
    tssVendor->setEnabled( FALSE );
    tssVendor->setMinimumSize( QSize( 220, 0 ) );
    tssVendor->setPaletteForegroundColor( QColor( 33, 33, 33 ) );
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 221, 223, 228) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, white );
    cg.setColor( QColorGroup::Dark, QColor( 85, 85, 85) );
    cg.setColor( QColorGroup::Mid, QColor( 199, 199, 199) );
    cg.setColor( QColorGroup::Text, QColor( 33, 33, 33) );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 239, 239, 239) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, QColor( 103, 141, 178) );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, QColor( 0, 0, 238) );
    cg.setColor( QColorGroup::LinkVisited, QColor( 82, 24, 139) );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 221, 223, 228) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, white );
    cg.setColor( QColorGroup::Dark, QColor( 85, 85, 85) );
    cg.setColor( QColorGroup::Mid, QColor( 199, 199, 199) );
    cg.setColor( QColorGroup::Text, QColor( 33, 33, 33) );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 239, 239, 239) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, QColor( 103, 141, 178) );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, QColor( 0, 0, 238) );
    cg.setColor( QColorGroup::LinkVisited, QColor( 82, 24, 139) );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 221, 223, 228) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, white );
    cg.setColor( QColorGroup::Dark, QColor( 85, 85, 85) );
    cg.setColor( QColorGroup::Mid, QColor( 199, 199, 199) );
    cg.setColor( QColorGroup::Text, QColor( 33, 33, 33) );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 239, 239, 239) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, QColor( 86, 117, 148) );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, QColor( 0, 0, 238) );
    cg.setColor( QColorGroup::LinkVisited, QColor( 82, 24, 139) );
    pal.setDisabled( cg );
    tssVendor->setPalette( pal );
    tssVendor->setLineWidth( 2 );
    layout29->addWidget( tssVendor );
    layout31->addLayout( layout29 );

    layout30 = new QHBoxLayout( 0, 0, 6, "layout30"); 
    spacer38_3 = new QSpacerItem( 0, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    layout30->addItem( spacer38_3 );

    TSS_Version_2 = new QLabel( tabDetails, "TSS_Version_2" );
    layout30->addWidget( TSS_Version_2 );
    spacer3_2 = new QSpacerItem( 16, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout30->addItem( spacer3_2 );

    tssVersion = new QLineEdit( tabDetails, "tssVersion" );
    tssVersion->setEnabled( FALSE );
    tssVersion->setMinimumSize( QSize( 220, 0 ) );
    tssVersion->setPaletteForegroundColor( QColor( 33, 33, 33 ) );
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 221, 223, 228) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, white );
    cg.setColor( QColorGroup::Dark, QColor( 85, 85, 85) );
    cg.setColor( QColorGroup::Mid, QColor( 199, 199, 199) );
    cg.setColor( QColorGroup::Text, QColor( 33, 33, 33) );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 239, 239, 239) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, QColor( 103, 141, 178) );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, QColor( 0, 0, 238) );
    cg.setColor( QColorGroup::LinkVisited, QColor( 82, 24, 139) );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 221, 223, 228) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, white );
    cg.setColor( QColorGroup::Dark, QColor( 85, 85, 85) );
    cg.setColor( QColorGroup::Mid, QColor( 199, 199, 199) );
    cg.setColor( QColorGroup::Text, QColor( 33, 33, 33) );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 239, 239, 239) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, QColor( 103, 141, 178) );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, QColor( 0, 0, 238) );
    cg.setColor( QColorGroup::LinkVisited, QColor( 82, 24, 139) );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 221, 223, 228) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, white );
    cg.setColor( QColorGroup::Dark, QColor( 85, 85, 85) );
    cg.setColor( QColorGroup::Mid, QColor( 199, 199, 199) );
    cg.setColor( QColorGroup::Text, QColor( 33, 33, 33) );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, QColor( 239, 239, 239) );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, QColor( 86, 117, 148) );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, QColor( 0, 0, 238) );
    cg.setColor( QColorGroup::LinkVisited, QColor( 82, 24, 139) );
    pal.setDisabled( cg );
    tssVersion->setPalette( pal );
    tssVersion->setLineWidth( 2 );
    layout30->addWidget( tssVersion );
    layout31->addLayout( layout30 );
    layout32->addLayout( layout31 );
    spacer26_4 = new QSpacerItem( 20, 20, QSizePolicy::MinimumExpanding, QSizePolicy::Minimum );
    layout32->addItem( spacer26_4 );
    layout33->addLayout( layout32 );
    spacer58_2 = new QSpacerItem( 106, 89, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout33->addItem( spacer58_2 );
    tabDetailsLayout->addLayout( layout33 );
    tabInfo->insertTab( tabDetails, QString::fromLatin1("") );

    tabCapabilities = new QWidget( tabInfo, "tabCapabilities" );
    tabCapabilitiesLayout = new QVBoxLayout( tabCapabilities, 11, 6, "tabCapabilitiesLayout"); 

    myCapabilities = new QTable( tabCapabilities, "myCapabilities" );
    myCapabilities->setNumCols( myCapabilities->numCols() + 1 );
    myCapabilities->horizontalHeader()->setLabel( myCapabilities->numCols() - 1, tr2i18n( "Description" ) );
    myCapabilities->setNumCols( myCapabilities->numCols() + 1 );
    myCapabilities->horizontalHeader()->setLabel( myCapabilities->numCols() - 1, tr2i18n( "Value" ) );
    myCapabilities->setNumRows( 3 );
    myCapabilities->setNumCols( 2 );
    tabCapabilitiesLayout->addWidget( myCapabilities );
    tabInfo->insertTab( tabCapabilities, QString::fromLatin1("") );

    tabPCRs = new QWidget( tabInfo, "tabPCRs" );
    tabPCRsLayout = new QVBoxLayout( tabPCRs, 11, 6, "tabPCRsLayout"); 

    myPCRs = new QListBox( tabPCRs, "myPCRs" );
    tabPCRsLayout->addWidget( myPCRs );
    tabInfo->insertTab( tabPCRs, QString::fromLatin1("") );
    WStackPageLayout->addWidget( tabInfo );
    widgetStack1->addWidget( WStackPage, 0 );

    WStackPage_2 = new QWidget( widgetStack1, "WStackPage_2" );
    WStackPageLayout_2 = new QVBoxLayout( WStackPage_2, 11, 6, "WStackPageLayout_2"); 

    tabOwner = new QTabWidget( WStackPage_2, "tabOwner" );

    tabOwnership = new QWidget( tabOwner, "tabOwnership" );
    tabOwnershipLayout = new QVBoxLayout( tabOwnership, 11, 6, "tabOwnershipLayout"); 

    layout38 = new QVBoxLayout( 0, 15, 6, "layout38"); 

    textLabel1_2_4 = new QLabel( tabOwnership, "textLabel1_2_4" );
    textLabel1_2_4->setBackgroundMode( QLabel::PaletteBackground );
    textLabel1_2_4->setPaletteBackgroundColor( QColor( 180, 180, 180 ) );
    textLabel1_2_4->setBackgroundOrigin( QLabel::WindowOrigin );
    layout38->addWidget( textLabel1_2_4 );

    layout37 = new QHBoxLayout( 0, 0, 6, "layout37"); 
    spacer36 = new QSpacerItem( 20, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout37->addItem( spacer36 );

    layout36 = new QVBoxLayout( 0, 0, 6, "layout36"); 

    textLabel5_2 = new QLabel( tabOwnership, "textLabel5_2" );
    textLabel5_2->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );
    layout36->addWidget( textLabel5_2 );
    spacer34 = new QSpacerItem( 20, 47, QSizePolicy::Minimum, QSizePolicy::MinimumExpanding );
    layout36->addItem( spacer34 );

    layout56_2 = new QGridLayout( 0, 1, 1, 0, 6, "layout56_2"); 

    myTakeOwnerText = new QLabel( tabOwnership, "myTakeOwnerText" );
    myTakeOwnerText->setTextFormat( QLabel::AutoText );
    myTakeOwnerText->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );

    layout56_2->addWidget( myTakeOwnerText, 0, 0 );

    myChangePassText = new QLabel( tabOwnership, "myChangePassText" );
    myChangePassText->setTextFormat( QLabel::AutoText );

    layout56_2->addWidget( myChangePassText, 1, 0 );

    myClearOwnerText = new QLabel( tabOwnership, "myClearOwnerText" );
    myClearOwnerText->setTextFormat( QLabel::AutoText );
    myClearOwnerText->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );

    layout56_2->addWidget( myClearOwnerText, 2, 0 );

    myTakeOwnership = new QPushButton( tabOwnership, "myTakeOwnership" );
    myTakeOwnership->setEnabled( FALSE );
    myTakeOwnership->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)0, 0, 0, myTakeOwnership->sizePolicy().hasHeightForWidth() ) );

    layout56_2->addWidget( myTakeOwnership, 0, 1 );

    myChangePassword = new QPushButton( tabOwnership, "myChangePassword" );
    myChangePassword->setEnabled( FALSE );
    myChangePassword->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, myChangePassword->sizePolicy().hasHeightForWidth() ) );

    layout56_2->addWidget( myChangePassword, 1, 1 );

    myClearOwnership = new QPushButton( tabOwnership, "myClearOwnership" );
    myClearOwnership->setEnabled( FALSE );
    myClearOwnership->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)0, 0, 0, myClearOwnership->sizePolicy().hasHeightForWidth() ) );

    layout56_2->addWidget( myClearOwnership, 2, 1 );
    layout36->addLayout( layout56_2 );
    spacer34_2 = new QSpacerItem( 20, 47, QSizePolicy::Minimum, QSizePolicy::MinimumExpanding );
    layout36->addItem( spacer34_2 );
    layout37->addLayout( layout36 );
    spacer37 = new QSpacerItem( 16, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout37->addItem( spacer37 );
    layout38->addLayout( layout37 );
    tabOwnershipLayout->addLayout( layout38 );
    tabOwner->insertTab( tabOwnership, QString::fromLatin1("") );

    tabBackup = new QWidget( tabOwner, "tabBackup" );
    tabBackupLayout = new QVBoxLayout( tabBackup, 11, 6, "tabBackupLayout"); 

    layout66 = new QVBoxLayout( 0, 15, 6, "layout66"); 

    textLabel1_2_4_6 = new QLabel( tabBackup, "textLabel1_2_4_6" );
    textLabel1_2_4_6->setBackgroundMode( QLabel::PaletteBackground );
    textLabel1_2_4_6->setPaletteBackgroundColor( QColor( 180, 180, 180 ) );
    textLabel1_2_4_6->setBackgroundOrigin( QLabel::WindowOrigin );
    layout66->addWidget( textLabel1_2_4_6 );

    layout64 = new QHBoxLayout( 0, 0, 6, "layout64"); 
    spacer36_2 = new QSpacerItem( 20, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout64->addItem( spacer36_2 );

    layout63 = new QVBoxLayout( 0, 0, 6, "layout63"); 

    textLabel5_2_5 = new QLabel( tabBackup, "textLabel5_2_5" );
    textLabel5_2_5->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );
    layout63->addWidget( textLabel5_2_5 );
    spacer38 = new QSpacerItem( 20, 5, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout63->addItem( spacer38 );

    layout61 = new QGridLayout( 0, 1, 1, 0, 6, "layout61"); 

    myLoadMaintenance = new QPushButton( tabBackup, "myLoadMaintenance" );
    myLoadMaintenance->setEnabled( FALSE );

    layout61->addWidget( myLoadMaintenance, 1, 1 );

    myLoadMaintenanceText = new QLabel( tabBackup, "myLoadMaintenanceText" );
    myLoadMaintenanceText->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)5, 0, 0, myLoadMaintenanceText->sizePolicy().hasHeightForWidth() ) );
    myLoadMaintenanceText->setTextFormat( QLabel::AutoText );

    layout61->addWidget( myLoadMaintenanceText, 1, 0 );

    myCreateMaintenance = new QPushButton( tabBackup, "myCreateMaintenance" );
    myCreateMaintenance->setEnabled( FALSE );
    myCreateMaintenance->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, myCreateMaintenance->sizePolicy().hasHeightForWidth() ) );

    layout61->addWidget( myCreateMaintenance, 0, 1 );

    myCreateMaintenanceText = new QLabel( tabBackup, "myCreateMaintenanceText" );
    myCreateMaintenanceText->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)5, 0, 0, myCreateMaintenanceText->sizePolicy().hasHeightForWidth() ) );
    myCreateMaintenanceText->setTextFormat( QLabel::AutoText );
    myCreateMaintenanceText->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );

    layout61->addWidget( myCreateMaintenanceText, 0, 0 );
    layout63->addLayout( layout61 );
    spacer38_2 = new QSpacerItem( 20, 5, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout63->addItem( spacer38_2 );

    layout62 = new QHBoxLayout( 0, 0, 6, "layout62"); 

    myMaintenanceInfoIcon = new QLabel( tabBackup, "myMaintenanceInfoIcon" );
    myMaintenanceInfoIcon->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)4, (QSizePolicy::SizeType)5, 0, 0, myMaintenanceInfoIcon->sizePolicy().hasHeightForWidth() ) );
    myMaintenanceInfoIcon->setMinimumSize( QSize( 10, 0 ) );
    myMaintenanceInfoIcon->setPixmap( image3 );
    myMaintenanceInfoIcon->setScaledContents( TRUE );
    layout62->addWidget( myMaintenanceInfoIcon );

    myMaintenanceInfoText = new QLabel( tabBackup, "myMaintenanceInfoText" );
    myMaintenanceInfoText->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)5, 0, 0, myMaintenanceInfoText->sizePolicy().hasHeightForWidth() ) );
    myMaintenanceInfoText->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );
    layout62->addWidget( myMaintenanceInfoText );
    layout63->addLayout( layout62 );
    layout64->addLayout( layout63 );
    spacer37_2 = new QSpacerItem( 15, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout64->addItem( spacer37_2 );
    layout66->addLayout( layout64 );
    tabBackupLayout->addLayout( layout66 );
    tabOwner->insertTab( tabBackup, QString::fromLatin1("") );
    WStackPageLayout_2->addWidget( tabOwner );
    widgetStack1->addWidget( WStackPage_2, 1 );

    WStackPage_3 = new QWidget( widgetStack1, "WStackPage_3" );
    WStackPageLayout_3 = new QVBoxLayout( WStackPage_3, 11, 6, "WStackPageLayout_3"); 

    tabSetting = new QTabWidget( WStackPage_3, "tabSetting" );

    tabOperationalModes = new QWidget( tabSetting, "tabOperationalModes" );
    tabOperationalModesLayout = new QVBoxLayout( tabOperationalModes, 11, 6, "tabOperationalModesLayout"); 

    layout45 = new QVBoxLayout( 0, 15, 6, "layout45"); 

    textLabel1_2_4_2_3 = new QLabel( tabOperationalModes, "textLabel1_2_4_2_3" );
    textLabel1_2_4_2_3->setBackgroundMode( QLabel::PaletteBackground );
    textLabel1_2_4_2_3->setPaletteBackgroundColor( QColor( 180, 180, 180 ) );
    textLabel1_2_4_2_3->setBackgroundOrigin( QLabel::WindowOrigin );
    layout45->addWidget( textLabel1_2_4_2_3 );

    layout43 = new QHBoxLayout( 0, 0, 6, "layout43"); 
    spacer42_3 = new QSpacerItem( 20, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout43->addItem( spacer42_3 );

    layout42 = new QVBoxLayout( 0, 0, 6, "layout42"); 

    textLabel2_4 = new QLabel( tabOperationalModes, "textLabel2_4" );
    textLabel2_4->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );
    layout42->addWidget( textLabel2_4 );

    layout40 = new QHBoxLayout( 0, 0, 6, "layout40"); 

    myTakeOwnerText_2_2 = new QLabel( tabOperationalModes, "myTakeOwnerText_2_2" );
    myTakeOwnerText_2_2->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 1, 0, myTakeOwnerText_2_2->sizePolicy().hasHeightForWidth() ) );
    myTakeOwnerText_2_2->setTextFormat( QLabel::AutoText );
    myTakeOwnerText_2_2->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );
    layout40->addWidget( myTakeOwnerText_2_2 );

    myDeactivate = new QPushButton( tabOperationalModes, "myDeactivate" );
    myDeactivate->setEnabled( FALSE );
    myDeactivate->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)0, 0, 0, myDeactivate->sizePolicy().hasHeightForWidth() ) );
    myDeactivate->setMinimumSize( QSize( 0, 0 ) );
    layout40->addWidget( myDeactivate );
    layout42->addLayout( layout40 );
    layout43->addLayout( layout42 );
    spacer42_4 = new QSpacerItem( 20, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout43->addItem( spacer42_4 );
    layout45->addLayout( layout43 );
    spacer40 = new QSpacerItem( 170, 5, QSizePolicy::Minimum, QSizePolicy::MinimumExpanding );
    layout45->addItem( spacer40 );

    textLabel1_2_4_2_3_2 = new QLabel( tabOperationalModes, "textLabel1_2_4_2_3_2" );
    textLabel1_2_4_2_3_2->setBackgroundMode( QLabel::PaletteBackground );
    textLabel1_2_4_2_3_2->setPaletteBackgroundColor( QColor( 180, 180, 180 ) );
    textLabel1_2_4_2_3_2->setBackgroundOrigin( QLabel::WindowOrigin );
    layout45->addWidget( textLabel1_2_4_2_3_2 );

    layout44 = new QHBoxLayout( 0, 0, 6, "layout44"); 
    spacer42 = new QSpacerItem( 20, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout44->addItem( spacer42 );

    layout41 = new QVBoxLayout( 0, 0, 6, "layout41"); 

    myTakeOwnerText_2_2_2 = new QLabel( tabOperationalModes, "myTakeOwnerText_2_2_2" );
    myTakeOwnerText_2_2_2->setTextFormat( QLabel::AutoText );
    myTakeOwnerText_2_2_2->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );
    layout41->addWidget( myTakeOwnerText_2_2_2 );

    layout39 = new QHBoxLayout( 0, 0, 6, "layout39"); 

    myDisableLabel = new QLabel( tabOperationalModes, "myDisableLabel" );
    myDisableLabel->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 1, 0, myDisableLabel->sizePolicy().hasHeightForWidth() ) );
    layout39->addWidget( myDisableLabel );

    myDisable = new QPushButton( tabOperationalModes, "myDisable" );
    myDisable->setEnabled( FALSE );
    layout39->addWidget( myDisable );
    layout41->addLayout( layout39 );
    layout44->addLayout( layout41 );
    spacer42_2 = new QSpacerItem( 20, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout44->addItem( spacer42_2 );
    layout45->addLayout( layout44 );
    spacer40_2 = new QSpacerItem( 170, 5, QSizePolicy::Minimum, QSizePolicy::MinimumExpanding );
    layout45->addItem( spacer40_2 );
    tabOperationalModesLayout->addLayout( layout45 );
    tabSetting->insertTab( tabOperationalModes, QString::fromLatin1("") );

    tabIdentity = new QWidget( tabSetting, "tabIdentity" );
    tabIdentityLayout = new QVBoxLayout( tabIdentity, 11, 6, "tabIdentityLayout"); 

    layout49 = new QVBoxLayout( 0, 15, 6, "layout49"); 

    textLabel1_2_4_2_7 = new QLabel( tabIdentity, "textLabel1_2_4_2_7" );
    textLabel1_2_4_2_7->setBackgroundMode( QLabel::PaletteBackground );
    textLabel1_2_4_2_7->setPaletteBackgroundColor( QColor( 180, 180, 180 ) );
    textLabel1_2_4_2_7->setBackgroundOrigin( QLabel::WindowOrigin );
    layout49->addWidget( textLabel1_2_4_2_7 );

    layout48 = new QHBoxLayout( 0, 0, 6, "layout48"); 
    spacer46 = new QSpacerItem( 20, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout48->addItem( spacer46 );

    layout47 = new QVBoxLayout( 0, 0, 6, "layout47"); 

    myTakeOwnerText_2_6 = new QLabel( tabIdentity, "myTakeOwnerText_2_6" );
    myTakeOwnerText_2_6->setTextFormat( QLabel::AutoText );
    myTakeOwnerText_2_6->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );
    layout47->addWidget( myTakeOwnerText_2_6 );

    layout46 = new QGridLayout( 0, 1, 1, 0, 6, "layout46"); 

    myCreatEndorsement = new QPushButton( tabIdentity, "myCreatEndorsement" );
    myCreatEndorsement->setEnabled( FALSE );

    layout46->addWidget( myCreatEndorsement, 0, 1 );

    myRestrictEndorsement = new QPushButton( tabIdentity, "myRestrictEndorsement" );
    myRestrictEndorsement->setEnabled( FALSE );

    layout46->addWidget( myRestrictEndorsement, 3, 1 );

    myClearOwnerText_2_5 = new QLabel( tabIdentity, "myClearOwnerText_2_5" );
    myClearOwnerText_2_5->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 1, 0, myClearOwnerText_2_5->sizePolicy().hasHeightForWidth() ) );
    myClearOwnerText_2_5->setTextFormat( QLabel::AutoText );
    myClearOwnerText_2_5->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );

    layout46->addWidget( myClearOwnerText_2_5, 3, 0 );

    myChangePassText_2_6_2 = new QLabel( tabIdentity, "myChangePassText_2_6_2" );
    myChangePassText_2_6_2->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 1, 0, myChangePassText_2_6_2->sizePolicy().hasHeightForWidth() ) );
    myChangePassText_2_6_2->setTextFormat( QLabel::AutoText );

    layout46->addWidget( myChangePassText_2_6_2, 2, 0 );

    mySaveEndorsement = new QPushButton( tabIdentity, "mySaveEndorsement" );
    mySaveEndorsement->setEnabled( FALSE );

    layout46->addWidget( mySaveEndorsement, 2, 1 );

    myChangePassText_2_6 = new QLabel( tabIdentity, "myChangePassText_2_6" );
    myChangePassText_2_6->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 1, 0, myChangePassText_2_6->sizePolicy().hasHeightForWidth() ) );
    myChangePassText_2_6->setTextFormat( QLabel::AutoText );

    layout46->addWidget( myChangePassText_2_6, 1, 0 );

    myShowEndorsement = new QPushButton( tabIdentity, "myShowEndorsement" );
    myShowEndorsement->setEnabled( FALSE );

    layout46->addWidget( myShowEndorsement, 1, 1 );

    textLabel4_5 = new QLabel( tabIdentity, "textLabel4_5" );
    textLabel4_5->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 1, 0, textLabel4_5->sizePolicy().hasHeightForWidth() ) );

    layout46->addWidget( textLabel4_5, 0, 0 );
    layout47->addLayout( layout46 );
    layout48->addLayout( layout47 );
    spacer46_2 = new QSpacerItem( 20, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout48->addItem( spacer46_2 );
    layout49->addLayout( layout48 );
    spacer48_2 = new QSpacerItem( 20, 40, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout49->addItem( spacer48_2 );
    tabIdentityLayout->addLayout( layout49 );
    tabSetting->insertTab( tabIdentity, QString::fromLatin1("") );

    tabSelfTest = new QWidget( tabSetting, "tabSelfTest" );
    tabSelfTestLayout = new QVBoxLayout( tabSelfTest, 11, 6, "tabSelfTestLayout"); 

    layout53 = new QVBoxLayout( 0, 15, 6, "layout53"); 

    textLabel1_2_4_2_3_6 = new QLabel( tabSelfTest, "textLabel1_2_4_2_3_6" );
    textLabel1_2_4_2_3_6->setBackgroundMode( QLabel::PaletteBackground );
    textLabel1_2_4_2_3_6->setPaletteBackgroundColor( QColor( 180, 180, 180 ) );
    textLabel1_2_4_2_3_6->setBackgroundOrigin( QLabel::WindowOrigin );
    layout53->addWidget( textLabel1_2_4_2_3_6 );

    layout52 = new QHBoxLayout( 0, 0, 6, "layout52"); 
    spacer49_2 = new QSpacerItem( 20, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout52->addItem( spacer49_2 );

    layout51 = new QVBoxLayout( 0, 0, 8, "layout51"); 

    textLabel1_3 = new QLabel( tabSelfTest, "textLabel1_3" );
    textLabel1_3->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );
    layout51->addWidget( textLabel1_3 );

    layout50 = new QHBoxLayout( 0, 0, 6, "layout50"); 

    textLabel2_3 = new QLabel( tabSelfTest, "textLabel2_3" );
    textLabel2_3->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 1, 0, textLabel2_3->sizePolicy().hasHeightForWidth() ) );
    textLabel2_3->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );
    layout50->addWidget( textLabel2_3 );

    mySelfTest = new QPushButton( tabSelfTest, "mySelfTest" );
    mySelfTest->setEnabled( FALSE );
    layout50->addWidget( mySelfTest );
    layout51->addLayout( layout50 );
    layout52->addLayout( layout51 );
    spacer49_2_2 = new QSpacerItem( 20, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout52->addItem( spacer49_2_2 );
    layout53->addLayout( layout52 );
    spacer51 = new QSpacerItem( 20, 40, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout53->addItem( spacer51 );
    tabSelfTestLayout->addLayout( layout53 );
    tabSetting->insertTab( tabSelfTest, QString::fromLatin1("") );

    TabPage = new QWidget( tabSetting, "TabPage" );
    TabPageLayout = new QVBoxLayout( TabPage, 11, 6, "TabPageLayout"); 

    layout60 = new QVBoxLayout( 0, 15, 6, "layout60"); 

    textLabel1_2_4_2_2_5 = new QLabel( TabPage, "textLabel1_2_4_2_2_5" );
    textLabel1_2_4_2_2_5->setBackgroundMode( QLabel::PaletteBackground );
    textLabel1_2_4_2_2_5->setPaletteBackgroundColor( QColor( 180, 180, 180 ) );
    textLabel1_2_4_2_2_5->setBackgroundOrigin( QLabel::WindowOrigin );
    layout60->addWidget( textLabel1_2_4_2_2_5 );

    layout59 = new QHBoxLayout( 0, 0, 6, "layout59"); 
    spacer55 = new QSpacerItem( 20, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout59->addItem( spacer55 );

    layout58 = new QVBoxLayout( 0, 0, 6, "layout58"); 

    layout55 = new QHBoxLayout( 0, 0, 6, "layout55"); 

    myReadCertificateText = new QLabel( TabPage, "myReadCertificateText" );
    myReadCertificateText->setEnabled( FALSE );
    myReadCertificateText->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)7, 1, 1, myReadCertificateText->sizePolicy().hasHeightForWidth() ) );
    myReadCertificateText->setTextFormat( QLabel::AutoText );
    myReadCertificateText->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );
    layout55->addWidget( myReadCertificateText );

    myReadCertificate = new QPushButton( TabPage, "myReadCertificate" );
    myReadCertificate->setEnabled( FALSE );
    layout55->addWidget( myReadCertificate );
    layout58->addLayout( layout55 );

    layout57_2 = new QHBoxLayout( 0, 0, 6, "layout57_2"); 

    layout56_3 = new QVBoxLayout( 0, 0, 6, "layout56_3"); 
    spacer53 = new QSpacerItem( 52, 5, QSizePolicy::Minimum, QSizePolicy::Minimum );
    layout56_3->addItem( spacer53 );

    myCertificateIcon = new QLabel( TabPage, "myCertificateIcon" );
    myCertificateIcon->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)4, (QSizePolicy::SizeType)5, 0, 0, myCertificateIcon->sizePolicy().hasHeightForWidth() ) );
    myCertificateIcon->setMinimumSize( QSize( 10, 0 ) );
    myCertificateIcon->setPixmap( image3 );
    myCertificateIcon->setScaledContents( TRUE );
    layout56_3->addWidget( myCertificateIcon );
    spacer53_2 = new QSpacerItem( 52, 5, QSizePolicy::Minimum, QSizePolicy::Minimum );
    layout56_3->addItem( spacer53_2 );
    layout57_2->addLayout( layout56_3 );

    myCertificateText = new QLabel( TabPage, "myCertificateText" );
    myCertificateText->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)5, 1, 0, myCertificateText->sizePolicy().hasHeightForWidth() ) );
    myCertificateText->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );
    layout57_2->addWidget( myCertificateText );
    layout58->addLayout( layout57_2 );
    layout59->addLayout( layout58 );
    spacer55_2 = new QSpacerItem( 20, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout59->addItem( spacer55_2 );
    layout60->addLayout( layout59 );
    spacer57 = new QSpacerItem( 20, 40, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout60->addItem( spacer57 );
    TabPageLayout->addLayout( layout60 );
    tabSetting->insertTab( TabPage, QString::fromLatin1("") );
    WStackPageLayout_3->addWidget( tabSetting );
    widgetStack1->addWidget( WStackPage_3, 2 );

    WStackPage_4 = new QWidget( widgetStack1, "WStackPage_4" );
    WStackPageLayout_4 = new QVBoxLayout( WStackPage_4, 11, 6, "WStackPageLayout_4"); 

    tabAdvanced = new QTabWidget( WStackPage_4, "tabAdvanced" );
    tabAdvanced->setEnabled( TRUE );

    TabPage_2 = new QWidget( tabAdvanced, "TabPage_2" );
    TabPageLayout_2 = new QVBoxLayout( TabPage_2, 11, 6, "TabPageLayout_2"); 

    layout64_2 = new QVBoxLayout( 0, 15, 6, "layout64_2"); 
    spacer62 = new QSpacerItem( 20, 40, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout64_2->addItem( spacer62 );

    layout63_2 = new QHBoxLayout( 0, 0, 6, "layout63_2"); 

    layout61_2 = new QVBoxLayout( 0, 0, 6, "layout61_2"); 
    spacer58 = new QSpacerItem( 20, 40, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout61_2->addItem( spacer58 );

    pixmapLabel1_2_2 = new QLabel( TabPage_2, "pixmapLabel1_2_2" );
    pixmapLabel1_2_2->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)1, 0, 0, pixmapLabel1_2_2->sizePolicy().hasHeightForWidth() ) );
    pixmapLabel1_2_2->setPixmap( image4 );
    pixmapLabel1_2_2->setScaledContents( TRUE );
    layout61_2->addWidget( pixmapLabel1_2_2 );
    spacer60 = new QSpacerItem( 20, 40, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout61_2->addItem( spacer60 );
    layout63_2->addLayout( layout61_2 );

    layout62_2 = new QVBoxLayout( 0, 0, 6, "layout62_2"); 

    textLabel6_2_2 = new QLabel( TabPage_2, "textLabel6_2_2" );
    textLabel6_2_2->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)5, 1, 0, textLabel6_2_2->sizePolicy().hasHeightForWidth() ) );
    textLabel6_2_2->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );
    layout62_2->addWidget( textLabel6_2_2 );

    textLabel9 = new QLabel( TabPage_2, "textLabel9" );
    textLabel9->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)5, 1, 0, textLabel9->sizePolicy().hasHeightForWidth() ) );
    textLabel9->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );
    layout62_2->addWidget( textLabel9 );
    layout63_2->addLayout( layout62_2 );
    layout64_2->addLayout( layout63_2 );
    spacer63 = new QSpacerItem( 20, 40, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout64_2->addItem( spacer63 );
    TabPageLayout_2->addLayout( layout64_2 );
    tabAdvanced->insertTab( TabPage_2, QString::fromLatin1("") );

    tabDisableMaintenance = new QWidget( tabAdvanced, "tabDisableMaintenance" );
    tabDisableMaintenanceLayout = new QVBoxLayout( tabDisableMaintenance, 11, 6, "tabDisableMaintenanceLayout"); 

    layout72_2 = new QVBoxLayout( 0, 15, 6, "layout72_2"); 

    textLabel1_2_4_2_7_2_2 = new QLabel( tabDisableMaintenance, "textLabel1_2_4_2_7_2_2" );
    textLabel1_2_4_2_7_2_2->setBackgroundMode( QLabel::PaletteBackground );
    textLabel1_2_4_2_7_2_2->setPaletteBackgroundColor( QColor( 180, 180, 180 ) );
    textLabel1_2_4_2_7_2_2->setBackgroundOrigin( QLabel::WindowOrigin );
    layout72_2->addWidget( textLabel1_2_4_2_7_2_2 );

    layout71_2 = new QHBoxLayout( 0, 0, 6, "layout71_2"); 
    spacer68 = new QSpacerItem( 20, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout71_2->addItem( spacer68 );

    layout70_2 = new QVBoxLayout( 0, 0, 6, "layout70_2"); 

    myTakeOwnerText_2_6_2_2 = new QLabel( tabDisableMaintenance, "myTakeOwnerText_2_6_2_2" );
    myTakeOwnerText_2_6_2_2->setTextFormat( QLabel::AutoText );
    myTakeOwnerText_2_6_2_2->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );
    layout70_2->addWidget( myTakeOwnerText_2_6_2_2 );

    layout69_2 = new QHBoxLayout( 0, 0, 6, "layout69_2"); 

    layout68 = new QVBoxLayout( 0, 0, 6, "layout68"); 
    spacer66 = new QSpacerItem( 41, 5, QSizePolicy::Minimum, QSizePolicy::Maximum );
    layout68->addItem( spacer66 );

    myDisableMaintenanceWarnIcon = new QLabel( tabDisableMaintenance, "myDisableMaintenanceWarnIcon" );
    myDisableMaintenanceWarnIcon->setEnabled( FALSE );
    myDisableMaintenanceWarnIcon->setPixmap( image4 );
    myDisableMaintenanceWarnIcon->setScaledContents( TRUE );
    layout68->addWidget( myDisableMaintenanceWarnIcon );
    spacer67 = new QSpacerItem( 40, 5, QSizePolicy::Minimum, QSizePolicy::Maximum );
    layout68->addItem( spacer67 );
    layout69_2->addLayout( layout68 );

    myDisableMaintenanceWarnText = new QLabel( tabDisableMaintenance, "myDisableMaintenanceWarnText" );
    myDisableMaintenanceWarnText->setEnabled( FALSE );
    myDisableMaintenanceWarnText->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)7, 0, 0, myDisableMaintenanceWarnText->sizePolicy().hasHeightForWidth() ) );
    myDisableMaintenanceWarnText->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );
    layout69_2->addWidget( myDisableMaintenanceWarnText );
    layout70_2->addLayout( layout69_2 );

    layout67 = new QHBoxLayout( 0, 0, 6, "layout67"); 

    myDisableMaintenanceText = new QLabel( tabDisableMaintenance, "myDisableMaintenanceText" );
    myDisableMaintenanceText->setEnabled( FALSE );
    myDisableMaintenanceText->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 1, 0, myDisableMaintenanceText->sizePolicy().hasHeightForWidth() ) );
    layout67->addWidget( myDisableMaintenanceText );

    myDisableMaintenance = new QPushButton( tabDisableMaintenance, "myDisableMaintenance" );
    myDisableMaintenance->setEnabled( FALSE );
    layout67->addWidget( myDisableMaintenance );
    layout70_2->addLayout( layout67 );

    layout66_2 = new QHBoxLayout( 0, 0, 6, "layout66_2"); 

    layout65 = new QVBoxLayout( 0, 0, 6, "layout65"); 
    spacer64 = new QSpacerItem( 20, 5, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout65->addItem( spacer64 );

    myDisableMaintenanceInfoIcon = new QLabel( tabDisableMaintenance, "myDisableMaintenanceInfoIcon" );
    myDisableMaintenanceInfoIcon->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)4, (QSizePolicy::SizeType)5, 0, 0, myDisableMaintenanceInfoIcon->sizePolicy().hasHeightForWidth() ) );
    myDisableMaintenanceInfoIcon->setMinimumSize( QSize( 10, 0 ) );
    myDisableMaintenanceInfoIcon->setPixmap( image3 );
    myDisableMaintenanceInfoIcon->setScaledContents( TRUE );
    layout65->addWidget( myDisableMaintenanceInfoIcon );
    spacer65 = new QSpacerItem( 20, 5, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout65->addItem( spacer65 );
    layout66_2->addLayout( layout65 );

    myDisableMaintenanceInfoText = new QLabel( tabDisableMaintenance, "myDisableMaintenanceInfoText" );
    myDisableMaintenanceInfoText->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)5, 1, 0, myDisableMaintenanceInfoText->sizePolicy().hasHeightForWidth() ) );
    myDisableMaintenanceInfoText->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );
    layout66_2->addWidget( myDisableMaintenanceInfoText );
    layout70_2->addLayout( layout66_2 );
    layout71_2->addLayout( layout70_2 );
    spacer68_2 = new QSpacerItem( 20, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout71_2->addItem( spacer68_2 );
    layout72_2->addLayout( layout71_2 );
    spacer70 = new QSpacerItem( 20, 40, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout72_2->addItem( spacer70 );
    tabDisableMaintenanceLayout->addLayout( layout72_2 );
    tabAdvanced->insertTab( tabDisableMaintenance, QString::fromLatin1("") );

    tabRevokeTrust = new QWidget( tabAdvanced, "tabRevokeTrust" );
    tabRevokeTrustLayout = new QVBoxLayout( tabRevokeTrust, 11, 6, "tabRevokeTrustLayout"); 

    layout85_2 = new QVBoxLayout( 0, 15, 6, "layout85_2"); 

    textLabel1_2_4_2_7_2 = new QLabel( tabRevokeTrust, "textLabel1_2_4_2_7_2" );
    textLabel1_2_4_2_7_2->setBackgroundMode( QLabel::PaletteBackground );
    textLabel1_2_4_2_7_2->setPaletteBackgroundColor( QColor( 180, 180, 180 ) );
    textLabel1_2_4_2_7_2->setBackgroundOrigin( QLabel::WindowOrigin );
    layout85_2->addWidget( textLabel1_2_4_2_7_2 );

    layout84 = new QHBoxLayout( 0, 0, 6, "layout84"); 
    spacer77 = new QSpacerItem( 20, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout84->addItem( spacer77 );

    layout82 = new QVBoxLayout( 0, 0, 6, "layout82"); 

    myTakeOwnerText_2_6_2 = new QLabel( tabRevokeTrust, "myTakeOwnerText_2_6_2" );
    myTakeOwnerText_2_6_2->setTextFormat( QLabel::AutoText );
    myTakeOwnerText_2_6_2->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );
    layout82->addWidget( myTakeOwnerText_2_6_2 );

    layout81 = new QHBoxLayout( 0, 0, 6, "layout81"); 

    layout80 = new QVBoxLayout( 0, 0, 6, "layout80"); 
    spacer75 = new QSpacerItem( 56, 5, QSizePolicy::Minimum, QSizePolicy::MinimumExpanding );
    layout80->addItem( spacer75 );

    myRevokeWarnIcon = new QLabel( tabRevokeTrust, "myRevokeWarnIcon" );
    myRevokeWarnIcon->setEnabled( FALSE );
    myRevokeWarnIcon->setPixmap( image4 );
    myRevokeWarnIcon->setScaledContents( TRUE );
    layout80->addWidget( myRevokeWarnIcon );
    spacer76_2 = new QSpacerItem( 64, 5, QSizePolicy::Minimum, QSizePolicy::MinimumExpanding );
    layout80->addItem( spacer76_2 );
    layout81->addLayout( layout80 );

    myRevokeWarnText = new QLabel( tabRevokeTrust, "myRevokeWarnText" );
    myRevokeWarnText->setEnabled( FALSE );
    myRevokeWarnText->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)5, 1, 0, myRevokeWarnText->sizePolicy().hasHeightForWidth() ) );
    myRevokeWarnText->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );
    layout81->addWidget( myRevokeWarnText );
    layout82->addLayout( layout81 );

    layout75 = new QHBoxLayout( 0, 0, 6, "layout75"); 

    textLabel7 = new QLabel( tabRevokeTrust, "textLabel7" );
    textLabel7->setEnabled( FALSE );
    textLabel7->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)5, 0, 0, textLabel7->sizePolicy().hasHeightForWidth() ) );
    layout75->addWidget( textLabel7 );

    myDeleteEndorsement = new QPushButton( tabRevokeTrust, "myDeleteEndorsement" );
    myDeleteEndorsement->setEnabled( FALSE );
    layout75->addWidget( myDeleteEndorsement );
    layout82->addLayout( layout75 );

    layout74 = new QHBoxLayout( 0, 0, 6, "layout74"); 

    layout73_2 = new QVBoxLayout( 0, 0, 6, "layout73_2"); 
    spacer71 = new QSpacerItem( 53, 5, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout73_2->addItem( spacer71 );

    myRevokeInfoIcon = new QLabel( tabRevokeTrust, "myRevokeInfoIcon" );
    myRevokeInfoIcon->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)4, (QSizePolicy::SizeType)5, 0, 0, myRevokeInfoIcon->sizePolicy().hasHeightForWidth() ) );
    myRevokeInfoIcon->setMinimumSize( QSize( 10, 0 ) );
    myRevokeInfoIcon->setPixmap( image3 );
    myRevokeInfoIcon->setScaledContents( TRUE );
    layout73_2->addWidget( myRevokeInfoIcon );
    spacer71_2 = new QSpacerItem( 53, 5, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout73_2->addItem( spacer71_2 );
    layout74->addLayout( layout73_2 );

    myRevokeInfoText = new QLabel( tabRevokeTrust, "myRevokeInfoText" );
    myRevokeInfoText->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)5, 0, 0, myRevokeInfoText->sizePolicy().hasHeightForWidth() ) );
    myRevokeInfoText->setAlignment( int( QLabel::WordBreak | QLabel::AlignVCenter ) );
    layout74->addWidget( myRevokeInfoText );
    layout82->addLayout( layout74 );
    layout84->addLayout( layout82 );
    spacer77_2 = new QSpacerItem( 20, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout84->addItem( spacer77_2 );
    layout85_2->addLayout( layout84 );
    spacer79 = new QSpacerItem( 20, 40, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout85_2->addItem( spacer79 );
    tabRevokeTrustLayout->addLayout( layout85_2 );
    tabAdvanced->insertTab( tabRevokeTrust, QString::fromLatin1("") );

    tab = new QWidget( tabAdvanced, "tab" );
    tabAdvanced->insertTab( tab, QString::fromLatin1("") );
    WStackPageLayout_4->addWidget( tabAdvanced );
    widgetStack1->addWidget( WStackPage_4, 3 );

    WStackPage_5 = new QWidget( widgetStack1, "WStackPage_5" );
    WStackPageLayout_5 = new QVBoxLayout( WStackPage_5, 11, 6, "WStackPageLayout_5"); 

    myVersionLabel = new QTabWidget( WStackPage_5, "myVersionLabel" );
    myVersionLabel->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)7, 1, 1, myVersionLabel->sizePolicy().hasHeightForWidth() ) );

    tab_2 = new QWidget( myVersionLabel, "tab_2" );
    tabLayout = new QVBoxLayout( tab_2, 11, 6, "tabLayout"); 

    layout99 = new QHBoxLayout( 0, 15, 6, "layout99"); 
    spacer44 = new QSpacerItem( 20, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout99->addItem( spacer44 );

    layout97 = new QVBoxLayout( 0, 0, 8, "layout97"); 
    spacer90 = new QSpacerItem( 39, 20, QSizePolicy::Minimum, QSizePolicy::Fixed );
    layout97->addItem( spacer90 );

    myProgramLabel = new QLabel( tab_2, "myProgramLabel" );
    myProgramLabel->setEnabled( TRUE );
    myProgramLabel->setAlignment( int( QLabel::WordBreak | QLabel::AlignCenter ) );
    layout97->addWidget( myProgramLabel );
    spacer90_2 = new QSpacerItem( 39, 16, QSizePolicy::Minimum, QSizePolicy::Fixed );
    layout97->addItem( spacer90_2 );

    textLabel5 = new QLabel( tab_2, "textLabel5" );
    textLabel5->setAlignment( int( QLabel::WordBreak | QLabel::AlignCenter ) );
    layout97->addWidget( textLabel5 );
    spacer92 = new QSpacerItem( 20, 40, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout97->addItem( spacer92 );
    layout99->addLayout( layout97 );
    spacer43 = new QSpacerItem( 20, 20, QSizePolicy::Fixed, QSizePolicy::Minimum );
    layout99->addItem( spacer43 );
    tabLayout->addLayout( layout99 );
    myVersionLabel->insertTab( tab_2, QString::fromLatin1("") );
    WStackPageLayout_5->addWidget( myVersionLabel );
    widgetStack1->addWidget( WStackPage_5, 4 );
    layout86->addWidget( widgetStack1 );
    layout87->addLayout( layout86 );

    Layout1 = new QHBoxLayout( 0, 5, 6, "Layout1"); 

    buttonHelp = new QPushButton( this, "buttonHelp" );
    buttonHelp->setPaletteForegroundColor( QColor( 0, 85, 127 ) );
    buttonHelp->setAutoDefault( TRUE );
    Layout1->addWidget( buttonHelp );
    Horizontal_Spacing2 = new QSpacerItem( 20, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    Layout1->addItem( Horizontal_Spacing2 );

    buttonOk = new QPushButton( this, "buttonOk" );
    buttonOk->setPaletteForegroundColor( QColor( 0, 85, 127 ) );
    buttonOk->setAutoDefault( TRUE );
    buttonOk->setDefault( TRUE );
    Layout1->addWidget( buttonOk );
    layout87->addLayout( Layout1 );
    TPM_ManagerWidgetBaseLayout->addLayout( layout87 );
    languageChange();
    resize( QSize(740, 487).expandedTo(minimumSizeHint()) );
    clearWState( WState_Polished );

    // signals and slots connections
    connect( buttonOk, SIGNAL( clicked() ), this, SLOT( accept() ) );
    connect( listBox, SIGNAL( highlighted(int) ), widgetStack1, SLOT( raiseWidget(int) ) );
    connect( listBox, SIGNAL( selected(QListBoxItem*) ), this, SLOT( TPM_Manager() ) );
    connect( tabAdvanced, SIGNAL( currentChanged(QWidget*) ), this, SLOT( slotAdvancedTabWidgetChanged(QWidget*) ) );
    connect( tabInfo, SIGNAL( currentChanged(QWidget*) ), this, SLOT( slotInfoTabWidgetChanged(QWidget*) ) );
    connect( tabOwner, SIGNAL( currentChanged(QWidget*) ), this, SLOT( slotOwnerTabWidgetChanged(QWidget*) ) );
    connect( tabSetting, SIGNAL( currentChanged(QWidget*) ), this, SLOT( slotTPMSettingsTabWidgetChanged(QWidget*) ) );
    connect( myTakeOwnership, SIGNAL( clicked() ), this, SLOT( slotTakeOwnership() ) );
    connect( myChangePassword, SIGNAL( clicked() ), this, SLOT( slotChangePassword() ) );
    connect( myClearOwnership, SIGNAL( clicked() ), this, SLOT( slotClearOwnership() ) );
    connect( mySelfTest, SIGNAL( clicked() ), this, SLOT( slotSelfTestFull() ) );
    connect( myShowEndorsement, SIGNAL( clicked() ), this, SLOT( slotShowEndorsementKey() ) );
    connect( mySaveEndorsement, SIGNAL( clicked() ), this, SLOT( slotSaveEndorsement() ) );
    connect( myRestrictEndorsement, SIGNAL( clicked() ), this, SLOT( slotRestrictEndorsement() ) );
    connect( myDeactivate, SIGNAL( clicked() ), this, SLOT( slotSetTempDeactivated() ) );
    connect( myDisable, SIGNAL( clicked() ), this, SLOT( slotSetEnabledDisabled() ) );
    connect( myDisableMaintenance, SIGNAL( clicked() ), this, SLOT( slotDisableMaintenance() ) );
    connect( myDeleteEndorsement, SIGNAL( clicked() ), this, SLOT( slotDeleteEndorsement() ) );
}

/*
 *  Destroys the object and frees any allocated resources
 */
TPM_ManagerWidgetBase::~TPM_ManagerWidgetBase()
{
    // no need to delete child widgets, Qt does it all for us
}

/*
 *  Sets the strings of the subwidgets using the current
 *  language.
 */
void TPM_ManagerWidgetBase::languageChange()
{
    setCaption( tr2i18n( "TPM Manager V0.2" ) );
    listBox->clear();
    listBox->insertItem( tr2i18n( "Info" ) );
    listBox->insertItem( tr2i18n( "Owner Settings" ) );
    listBox->insertItem( tr2i18n( "TPM Settings" ) );
    listBox->insertItem( tr2i18n( "Advanced" ) );
    listBox->insertItem( tr2i18n( "About" ) );
    buttonGroup1->setTitle( tr2i18n( "TPM Status" ) );
    myEnabledLabel->setText( QString::null );
    textLabel3_4_2->setText( tr2i18n( "activated" ) );
    myOwnerLabel->setText( QString::null );
    textLabel3_4->setText( tr2i18n( "enabled" ) );
    textLabel3_4_3->setText( tr2i18n( "owner set" ) );
    myActivatedLabel->setText( QString::null );
    textLabel1_2->setText( tr2i18n( "<font color=\"#00557f\"><b>TPM/TSS Status</b></font>" ) );
    tpmActivated->setText( tr2i18n( "--" ) );
    tssFound->setText( tr2i18n( "--" ) );
    textLabel2_2->setText( tr2i18n( "<p align=\"right\">Endorsement Key available</p>" ) );
    TPM_ACtive_Status->setText( tr2i18n( "<p align=\"right\">TPM activated</p>" ) );
    driverFound->setText( tr2i18n( "--" ) );
    textLabel3->setText( tr2i18n( "<p align=\"right\">TPM Owner set</p>" ) );
    foundLabel->setText( tr2i18n( "<p align=\"right\">TPM driver found</p>" ) );
    textLabel2->setText( tr2i18n( "<p align=\"right\">TPM enabled</p>" ) );
    myEndorsementAvailable->setText( tr2i18n( "--" ) );
    ownerSet->setText( tr2i18n( "--" ) );
    textLabel1->setText( tr2i18n( "<p align=\"right\">TSS system found</p>" ) );
    tpmEnabled->setText( tr2i18n( "--" ) );
    tabInfo->changeTab( tabStatus, tr2i18n( "Status" ) );
    textLabel1_2_2->setText( tr2i18n( "<font color=\"#00557f\"><b>TPM Details</b></font>" ) );
    Vendor->setText( tr2i18n( "Vendor" ) );
    tpmVendor->setText( QString::null );
    TPM_Version->setText( tr2i18n( "Version" ) );
    tpmVersion->setText( QString::null );
    TPM_Distribution->setText( tr2i18n( "Firmware" ) );
    tpmFirmware->setText( QString::null );
    textLabel1_2_3->setText( tr2i18n( "<font color=\"#00557f\"><b>TSS Details</b></font>" ) );
    TSS_Version->setText( tr2i18n( "TSS Vendor" ) );
    tssVendor->setText( QString::null );
    TSS_Version_2->setText( tr2i18n( "TSS Version" ) );
    tssVersion->setText( QString::null );
    tabInfo->changeTab( tabDetails, tr2i18n( "Details" ) );
    myCapabilities->horizontalHeader()->setLabel( 0, tr2i18n( "Description" ) );
    myCapabilities->horizontalHeader()->setLabel( 1, tr2i18n( "Value" ) );
    tabInfo->changeTab( tabCapabilities, tr2i18n( "Capa&bilities" ) );
    tabInfo->changeTab( tabPCRs, tr2i18n( "PCRs" ) );
    textLabel1_2_4->setText( tr2i18n( "<font color=\"#00557f\"><b>Owner Management</b></font>" ) );
    textLabel5_2->setText( tr2i18n( "A TPM Owner is required to manage the TPM. Allowed operations depend on the TPM status." ) );
    myTakeOwnerText->setText( tr2i18n( "Take Ownership." ) );
    myChangePassText->setText( tr2i18n( "Change Owner Password." ) );
    myClearOwnerText->setText( tr2i18n( "Clear Ownership and return the TPM to factory defaults." ) );
    myTakeOwnership->setText( tr2i18n( "Take" ) );
    myChangePassword->setText( tr2i18n( "Change" ) );
    myClearOwnership->setText( tr2i18n( "Clear" ) );
    tabOwner->changeTab( tabOwnership, tr2i18n( "Ownership" ) );
    textLabel1_2_4_6->setText( tr2i18n( "<font color=\"#00557f\"><b>Maintenance</b></font>" ) );
    textLabel5_2_5->setText( tr2i18n( "Creating a maintenance archive enables the migration of all data held in the protected storage of the TPM. In case of a TPM failure, the archive can be loaded into another TPM with support of the TPM manufacturer." ) );
    myLoadMaintenance->setText( tr2i18n( "Load" ) );
    myLoadMaintenanceText->setText( tr2i18n( "Load Maintenance Archive." ) );
    myCreateMaintenance->setText( tr2i18n( "Create" ) );
    myCreateMaintenanceText->setText( tr2i18n( "Create Maintenance Archive." ) );
    myMaintenanceInfoText->setText( tr2i18n( "Maintenance feature is not supported by this TPM." ) );
    tabOwner->changeTab( tabBackup, tr2i18n( "Backup" ) );
    textLabel1_2_4_2_3->setText( tr2i18n( "<font color=\"#00557f\"><b>Temporarily Deactivation</b></font>" ) );
    textLabel2_4->setText( tr2i18n( "A temporarily deactivated TPM is unable to execute com- mands that use TPM resources until the next reboot. No authorization is required." ) );
    myTakeOwnerText_2_2->setText( tr2i18n( "<p align=\"left\">Temporarily deactivate the TPM.</p>" ) );
    QToolTip::add( myTakeOwnerText_2_2, tr2i18n( "A deactivated TPM is unable to execute commands that use TPM resources until the next reboot." ) );
    myDeactivate->setText( tr2i18n( "Deactivate" ) );
    textLabel1_2_4_2_3_2->setText( tr2i18n( "<font color=\"#00557f\"><b>Permanently Enable/Disable</b></font>" ) );
    myTakeOwnerText_2_2_2->setText( tr2i18n( "<p align=\"left\">A disabled TPM is not able to execute commands that use TPM resources until it is enabled again. Requires Owner authorization.</p>" ) );
    myDisableLabel->setText( tr2i18n( "Enable/Disable the TPM." ) );
    myDisable->setText( tr2i18n( "Disable" ) );
    tabSetting->changeTab( tabOperationalModes, tr2i18n( "Operational Modes" ) );
    textLabel1_2_4_2_7->setText( tr2i18n( "<font color=\"#00557f\"><b>Endorsement Key (EK)</b></font>" ) );
    myTakeOwnerText_2_6->setText( tr2i18n( "The EK identifies the TPM and is used to establish the TPM Owner and Attestation Identity Keys (AIK)." ) );
    myCreatEndorsement->setText( tr2i18n( "Create" ) );
    myRestrictEndorsement->setText( tr2i18n( "Restrict" ) );
    myClearOwnerText_2_5->setText( tr2i18n( "Disable reading of the EK without owner authorization." ) );
    myChangePassText_2_6_2->setText( tr2i18n( "Store Endorsement Key." ) );
    mySaveEndorsement->setText( tr2i18n( "Save" ) );
    myChangePassText_2_6->setText( tr2i18n( "Show Endorsement Key Info." ) );
    myShowEndorsement->setText( tr2i18n( "Show" ) );
    textLabel4_5->setText( tr2i18n( "Create EK." ) );
    tabSetting->changeTab( tabIdentity, tr2i18n( "Identity" ) );
    textLabel1_2_4_2_3_6->setText( tr2i18n( "<font color=\"#00557f\"><b>Full Self Test</b></font>" ) );
    textLabel1_3->setText( tr2i18n( "The full selftest performs a self-test of each internal TPM function and provides an accurate assessment of the TPM’s ability to perform all operations." ) );
    textLabel2_3->setText( tr2i18n( "Execute full Selftest" ) );
    mySelfTest->setText( tr2i18n( "Run" ) );
    tabSetting->changeTab( tabSelfTest, tr2i18n( "Self Test" ) );
    textLabel1_2_4_2_2_5->setText( tr2i18n( "<font color=\"#00557f\"><b>TPM Certificate</b></font>" ) );
    myReadCertificateText->setText( tr2i18n( "Read the Endorsement Key certificate of the TPM." ) );
    myReadCertificate->setText( tr2i18n( "Read" ) );
    myCertificateText->setText( tr2i18n( "Reading the Endorsement Certificate is not supported by this TPM." ) );
    tabSetting->changeTab( TabPage, tr2i18n( "TPM Certificate" ) );
    textLabel6_2_2->setText( tr2i18n( "This section contains critical functions that may delete critical data or permanently deactivate features of the TPM." ) );
    textLabel9->setText( tr2i18n( "Note that this functions are provided WITHOUT ANY WARRANTY; use them at your own risk." ) );
    tabAdvanced->changeTab( TabPage_2, tr2i18n( "Warning" ) );
    textLabel1_2_4_2_7_2_2->setText( tr2i18n( "<font color=\"#00557f\"><b>Permanently Disable Maintenance</b></font>" ) );
    myTakeOwnerText_2_6_2_2->setText( tr2i18n( "Killing the Maintencance Feature permanently prevents anyone from creating a maintenance archive. This action allows TPM owners who do not want the maintenance feature to disable it." ) );
    myDisableMaintenanceWarnText->setText( tr2i18n( "This action, once taken, is permanent until a new TPM Owner is set." ) );
    myDisableMaintenanceText->setText( tr2i18n( "Disable Maintenance Feature" ) );
    myDisableMaintenance->setText( tr2i18n( "Disable" ) );
    myDisableMaintenanceInfoText->setText( tr2i18n( "Disabling the maintenance function is not supported by this TPM." ) );
    tabAdvanced->changeTab( tabDisableMaintenance, tr2i18n( "Disable Maintenance" ) );
    textLabel1_2_4_2_7_2->setText( tr2i18n( "<font color=\"#00557f\"><b>Delete Endorsement Key</b></font>" ) );
    myTakeOwnerText_2_6_2->setText( tr2i18n( "Deleting the EK invalidates both the TPM certificate and the platform certificate resulting in the revocation of the trust in the platform. From a trust perspective, the platform associated with these specific credentials no longer exists." ) );
    myRevokeWarnText->setText( tr2i18n( "This is a non-reversible function. Also, along with the EK, the Owner is also deleted removing all non-migratable keys and owner-specified state." ) );
    textLabel7->setText( tr2i18n( "Delete Endorsement Key" ) );
    myDeleteEndorsement->setText( tr2i18n( "Delete" ) );
    myRevokeInfoText->setText( tr2i18n( "Deleting the Endorsement Key is not supported by this TPM." ) );
    tabAdvanced->changeTab( tabRevokeTrust, tr2i18n( "Revoke Trust" ) );
    tabAdvanced->changeTab( tab, tr2i18n( "Update Firmware" ) );
    myProgramLabel->setText( tr2i18n( "TPM Manager V" ) );
    textLabel5->setText( tr2i18n( "<center>\n"
"(c) 2006 by<BR>\n"
"Anoosheh Zaerin (zaerin@sirrix.com)<BR>\n"
"Christian St&uuml;ble (stueble@acm.org)\n"
"</center>\n"
"\n"
"<p align=\"center\">For more information, see <a href=\"http://tpmmanager.sf.net\">http://tpmmanager.sourceforge.net</a></p>\n"
"\n"
"<p align=\"center\">This application is part of the PERSEUS security framework,\n"
"see <a href=\"http://www.perseus-os.org\">http://www.perseus-os.org</a></p>" ) );
    myVersionLabel->changeTab( tab_2, tr2i18n( "Cont&act" ) );
    buttonHelp->setText( tr2i18n( "He&lp" ) );
    buttonHelp->setAccel( QKeySequence( tr2i18n( "Alt+L" ) ) );
    buttonOk->setText( tr2i18n( "&OK" ) );
    buttonOk->setAccel( QKeySequence( QString::null ) );
}

void TPM_ManagerWidgetBase::TPM_Manager()
{
    qWarning( "TPM_ManagerWidgetBase::TPM_Manager(): Not implemented yet" );
}

void TPM_ManagerWidgetBase::slotChangePassword()
{
    qWarning( "TPM_ManagerWidgetBase::slotChangePassword(): Not implemented yet" );
}

void TPM_ManagerWidgetBase::slotClearOwnership()
{
    qWarning( "TPM_ManagerWidgetBase::slotClearOwnership(): Not implemented yet" );
}

void TPM_ManagerWidgetBase::slotTakeOwnership()
{
    qWarning( "TPM_ManagerWidgetBase::slotTakeOwnership(): Not implemented yet" );
}

void TPM_ManagerWidgetBase::slotSelfTestFull()
{
    qWarning( "TPM_ManagerWidgetBase::slotSelfTestFull(): Not implemented yet" );
}

void TPM_ManagerWidgetBase::slotSetTempDeactivated()
{
    qWarning( "TPM_ManagerWidgetBase::slotSetTempDeactivated(): Not implemented yet" );
}

void TPM_ManagerWidgetBase::slotInfoTabWidgetChanged(QWidget*)
{
    qWarning( "TPM_ManagerWidgetBase::slotInfoTabWidgetChanged(QWidget*): Not implemented yet" );
}

void TPM_ManagerWidgetBase::slotOwnerTabWidgetChanged(QWidget*)
{
    qWarning( "TPM_ManagerWidgetBase::slotOwnerTabWidgetChanged(QWidget*): Not implemented yet" );
}

void TPM_ManagerWidgetBase::slotTPMSettingsTabWidgetChanged(QWidget*)
{
    qWarning( "TPM_ManagerWidgetBase::slotTPMSettingsTabWidgetChanged(QWidget*): Not implemented yet" );
}

void TPM_ManagerWidgetBase::slotAdvancedTabWidgetChanged(QWidget*)
{
    qWarning( "TPM_ManagerWidgetBase::slotAdvancedTabWidgetChanged(QWidget*): Not implemented yet" );
}

void TPM_ManagerWidgetBase::slotSetEnabledDisabled()
{
    qWarning( "TPM_ManagerWidgetBase::slotSetEnabledDisabled(): Not implemented yet" );
}

void TPM_ManagerWidgetBase::slotEnableAdvancedTabs(bool)
{
    qWarning( "TPM_ManagerWidgetBase::slotEnableAdvancedTabs(bool): Not implemented yet" );
}

void TPM_ManagerWidgetBase::slotShowEndorsementKey()
{
    qWarning( "TPM_ManagerWidgetBase::slotShowEndorsementKey(): Not implemented yet" );
}

void TPM_ManagerWidgetBase::slotSaveEndorsement()
{
    qWarning( "TPM_ManagerWidgetBase::slotSaveEndorsement(): Not implemented yet" );
}

void TPM_ManagerWidgetBase::slotRestrictEndorsement()
{
    qWarning( "TPM_ManagerWidgetBase::slotRestrictEndorsement(): Not implemented yet" );
}

void TPM_ManagerWidgetBase::slotDisableMaintenance()
{
    qWarning( "TPM_ManagerWidgetBase::slotDisableMaintenance(): Not implemented yet" );
}

void TPM_ManagerWidgetBase::slotDeleteEndorsement()
{
    qWarning( "TPM_ManagerWidgetBase::slotDeleteEndorsement(): Not implemented yet" );
}

#include "tpmmanagerwidgetbase.moc"
